STAGE WRITE CODE

This code can be used to perform your disk I/O after sending the data to a staging area. 
It can also be used to read in your file with a certain number of processors with a new decomposition and write out the data with the new layout.

BUILD
=====
Edit the Makefile for your needs. This example is not built automatically with ADIOS. You need to install ADIOS first, then use the installation to build this code. 

The read method in this code is not set by argument but is in the source. Set it for your target usage. See variable "read_method", set around line 32. 

USAGE
=====
The 'job' file provides an example how to launch 3 applications within one job. Besides your own app, first you have to prepare and start the staging server (DataSpaces in the job script). Then you can run both your app and this stage writer code.

Parameters to stage write:
    E.g. genarray.bp staged.bp MPI \"\" $READPROC 1 1 

    input   Input stream path
    output  Output file path
    method  ADIOS method to write with
    params  Write method parameters (in quotes; comma-separated list)
    <decomposition>    list of numbers e.g. 32 8 4
            Decomposition values in each dimension of an array
            The product of these number must be less then the number
            of processes. Processes whose rank is higher than the
            product, will not read/write anything.
               Arrays with less dimensions than the number of values,
            will be decomposed with using the numbers from the beginning.

NOTES
=====

You probably end up modifying this code. For instance, you might find that the desired decomposition cannot be expressed (e.g. you have arrays with various dimensions and you want decomposition different from them), or you want to pass the output file name within the stream dataset itself, or you want to do something with the data before writing it out.









