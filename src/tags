!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.5.4	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/gpfs\/fs0\/cgj\/adios.svn\/trunk\/config\/missing --run aclocal-1.9$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ADIOS_BP_V1_H	adios_bp_v1.h	2;"	d
ADIOS_BUFFER_ALLOC_LATER	adios_internals.c	/^                                    ,ADIOS_BUFFER_ALLOC_LATER$/;"	e	enum:ADIOS_BUFFER_ALLOC_WHEN	file:
ADIOS_BUFFER_ALLOC_NOW	adios_internals.c	/^                                    ,ADIOS_BUFFER_ALLOC_NOW$/;"	e	enum:ADIOS_BUFFER_ALLOC_WHEN	file:
ADIOS_BUFFER_ALLOC_UNKNOWN	adios_internals.c	/^static enum ADIOS_BUFFER_ALLOC_WHEN {ADIOS_BUFFER_ALLOC_UNKNOWN$/;"	e	enum:ADIOS_BUFFER_ALLOC_WHEN	file:
ADIOS_BUFFER_ALLOC_WHEN	adios_internals.c	/^static enum ADIOS_BUFFER_ALLOC_WHEN {ADIOS_BUFFER_ALLOC_UNKNOWN$/;"	g	file:
ADIOS_CHARACTERISTICS	adios_bp_v1.h	/^enum ADIOS_CHARACTERISTICS$/;"	g
ADIOS_CLOSE_FN	adios_internals.h	/^typedef void (* ADIOS_CLOSE_FN) (struct adios_file_struct * fd$/;"	t
ADIOS_DATATYPES	adios_types.h	/^enum ADIOS_DATATYPES {adios_unknown = -1             \/\/ (size)$/;"	g
ADIOS_EMPTY_TRANSPORTS	adios_transport_hooks_dummy.c	6;"	d	file:
ADIOS_END_ITERATION_FN	adios_internals.h	/^typedef void (* ADIOS_END_ITERATION_FN) (struct adios_method_struct * method);$/;"	t
ADIOS_FINALIZE_FN	adios_internals.h	/^typedef void (* ADIOS_FINALIZE_FN) (int mype$/;"	t
ADIOS_FLAG	adios_types.h	/^enum ADIOS_FLAG {adios_flag_unknown = 0$/;"	g
ADIOS_GET_WRITE_BUFFER_FN	adios_internals.h	/^typedef void (* ADIOS_GET_WRITE_BUFFER_FN) (struct adios_file_struct * fd$/;"	t
ADIOS_H	adios.h	2;"	d
ADIOS_INIT_FN	adios_internals.h	/^typedef void (* ADIOS_INIT_FN) (const char * parameters$/;"	t
ADIOS_INIT_TRANSPORTS_SETUP	adios_transport_hooks.h	206;"	d
ADIOS_INIT_TRANSPORTS_SETUP	adios_transport_hooks.h	218;"	d
ADIOS_INIT_TRANSPORTS_SETUP	adios_transport_hooks.h	230;"	d
ADIOS_INIT_TRANSPORTS_SETUP	adios_transport_hooks.h	241;"	d
ADIOS_INTERNALS_H	adios_internals.h	2;"	d
ADIOS_IO_METHOD	adios_transport_hooks.h	/^enum ADIOS_IO_METHOD {ADIOS_METHOD_UNKNOWN     = -2$/;"	g
ADIOS_LUSTRE	adios_mpi_nwu.c	45;"	d	file:
ADIOS_MESH_RECTILINEAR	adios_internals.h	/^    ,ADIOS_MESH_RECTILINEAR  = 3$/;"	e	enum:ADIOS_MESH_TYPE
ADIOS_MESH_STRUCTURED	adios_internals.h	/^    ,ADIOS_MESH_STRUCTURED   = 2$/;"	e	enum:ADIOS_MESH_TYPE
ADIOS_MESH_TYPE	adios_internals.h	/^enum ADIOS_MESH_TYPE$/;"	g
ADIOS_MESH_UNIFORM	adios_internals.h	/^     ADIOS_MESH_UNIFORM      = 1$/;"	e	enum:ADIOS_MESH_TYPE
ADIOS_MESH_UNSTRUCTURED	adios_internals.h	/^    ,ADIOS_MESH_UNSTRUCTURED = 4$/;"	e	enum:ADIOS_MESH_TYPE
ADIOS_METHOD_COUNT	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_COUNT       = 10$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_DART	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_DART        = 3$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_DATATAP	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_DATATAP     = 1$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_MODE	adios_internals.h	/^enum ADIOS_METHOD_MODE {adios_mode_write  = 1$/;"	g
ADIOS_METHOD_MPI	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_MPI         = 0$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_MPI_CIO	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_MPI_CIO     = 6$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_MPI_NWU	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_MPI_NWU     = 9$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_NULL	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_NULL        = -1$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_PHDF5	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_PHDF5       = 7$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_POSIX	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_POSIX       = 2$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_POSIX_ASCII	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_POSIX_ASCII = 5$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_PROVENANCE	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_PROVENANCE  = 8$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_UNKNOWN	adios_transport_hooks.h	/^enum ADIOS_IO_METHOD {ADIOS_METHOD_UNKNOWN     = -2$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_METHOD_VTK	adios_transport_hooks.h	/^                     ,ADIOS_METHOD_VTK         = 4$/;"	e	enum:ADIOS_IO_METHOD
ADIOS_OPEN_FN	adios_internals.h	/^typedef int (* ADIOS_OPEN_FN) (struct adios_file_struct * fd$/;"	t
ADIOS_PARSE_METHOD_SETUP	adios_transport_hooks.h	147;"	d
ADIOS_PARSE_METHOD_SETUP	adios_transport_hooks.h	162;"	d
ADIOS_PARSE_METHOD_SETUP	adios_transport_hooks.h	176;"	d
ADIOS_PARSE_METHOD_SETUP	adios_transport_hooks.h	190;"	d
ADIOS_PROVENANCE_OUTPUTFILE	adios_provenance.c	/^static char ADIOS_PROVENANCE_OUTPUTFILE[] = "provenance.out";$/;"	v	file:
ADIOS_PROVENANCE_OUTPUTMETHOD	adios_provenance.c	/^enum ADIOS_PROVENANCE_OUTPUTMETHOD {adios_provenance_outputmethod_file = 1$/;"	g	file:
ADIOS_PROVENANCE_SOCKETINFOENV	adios_provenance.c	/^static char ADIOS_PROVENANCE_SOCKETINFOENV[] = "ADIOS_PROVENANCE_SOCKETINFOFILE";$/;"	v	file:
ADIOS_PROVENANCE_SOCKETINFOFILE	adios_provenance.c	/^static char ADIOS_PROVENANCE_SOCKETINFOFILE[] = "provenance.conf";$/;"	v	file:
ADIOS_READ_FN	adios_internals.h	/^typedef void (* ADIOS_READ_FN) (struct adios_file_struct * fd$/;"	t
ADIOS_SHOULD_BUFFER_FN	adios_internals.h	/^typedef enum ADIOS_FLAG (* ADIOS_SHOULD_BUFFER_FN)$/;"	t
ADIOS_START_CALCULATION_FN	adios_internals.h	/^typedef void (* ADIOS_START_CALCULATION_FN)$/;"	t
ADIOS_STOP_CALCULATION_FN	adios_internals.h	/^typedef void (* ADIOS_STOP_CALCULATION_FN)$/;"	t
ADIOS_TRANSPORT_HOOKS_H	adios_transport_hooks.h	2;"	d
ADIOS_TYPES_H	adios_types.h	2;"	d
ADIOS_WRITE_FN	adios_internals.h	/^typedef void (* ADIOS_WRITE_FN) (struct adios_file_struct * fd$/;"	t
AMDEP_FALSE	Makefile	/^AMDEP_FALSE = #$/;"	m
AMDEP_TRUE	Makefile	/^AMDEP_TRUE = $/;"	m
AMTAR	Makefile	/^AMTAR = ${SHELL} \/gpfs\/fs0\/cgj\/adios.svn\/trunk\/config\/missing --run tar$/;"	m
AR	Makefile	/^AR = ar$/;"	m
ARFLAGS	Makefile	/^ARFLAGS = cru$/;"	m
ASSIGN_FNS	adios_transport_hooks.h	86;"	d
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/gpfs\/fs0\/cgj\/adios.svn\/trunk\/config\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/gpfs\/fs0\/cgj\/adios.svn\/trunk\/config\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/gpfs\/fs0\/cgj\/adios.svn\/trunk\/config\/missing --run automake-1.9$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = no-dependencies$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
BYTE_ALIGN	adios_bp_v1.c	12;"	d	file:
CC	Makefile	/^CC = mpixlc_r$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=none$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CDPATH	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O0$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CPP	Makefile	/^CPP = mpixlc_r -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CXX	Makefile	/^CXX = $/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=none$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DEFAULT_BSIZE	adios_mpi.c	317;"	d	file:
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DIMSIZE	adios_datatap.c	312;"	d	file:
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(include_HEADERS) $(srcdir)\/Makefile.am \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__libadios_a_SOURCES_DIST) \\$/;"	m
ECHO	Makefile	/^ECHO = echo$/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = grep -E$/;"	m
ELSIZE	adios_datatap.c	314;"	d	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
F77	Makefile	/^F77 = f77$/;"	m
FC	Makefile	/^FC = mpixlf90_r$/;"	m
FCFLAGS	Makefile	/^FCFLAGS = -g$/;"	m
FFLAGS	Makefile	/^FFLAGS = -g$/;"	m
FORWARD_DECLARE	adios_transport_hooks.h	45;"	d
FORWARD_DECLARE	adios_transport_hooks.h	9;"	d
GENGETOPT	Makefile	/^GENGETOPT = no$/;"	m
GET_ATTR	adios_internals.c	45;"	d	file:
HAVE_GENGETOPT_FALSE	Makefile	/^HAVE_GENGETOPT_FALSE = $/;"	m
HAVE_GENGETOPT_TRUE	Makefile	/^HAVE_GENGETOPT_TRUE = #$/;"	m
HAVE_HDF5_FALSE	Makefile	/^HAVE_HDF5_FALSE = #$/;"	m
HAVE_HDF5_TRUE	Makefile	/^HAVE_HDF5_TRUE = $/;"	m
HAVE_MPI_FALSE	Makefile	/^HAVE_MPI_FALSE = #$/;"	m
HAVE_MPI_TRUE	Makefile	/^HAVE_MPI_TRUE = $/;"	m
HAVE_MXML_FALSE	Makefile	/^HAVE_MXML_FALSE = #$/;"	m
HAVE_MXML_TRUE	Makefile	/^HAVE_MXML_TRUE = $/;"	m
HAVE_NETCDF_FALSE	Makefile	/^HAVE_NETCDF_FALSE = #$/;"	m
HAVE_NETCDF_TRUE	Makefile	/^HAVE_NETCDF_TRUE = $/;"	m
HAVE_PHDF5_FALSE	Makefile	/^HAVE_PHDF5_FALSE = #$/;"	m
HAVE_PHDF5_TRUE	Makefile	/^HAVE_PHDF5_TRUE = $/;"	m
HDF5_CPPFLAGS	Makefile	/^HDF5_CPPFLAGS = -I\/sw\/bgp\/hdf5\/1.6.5\/cnk1.0_bgxlc9bgxlf9011\/include$/;"	m
HDF5_LDFLAGS	Makefile	/^HDF5_LDFLAGS = -L\/sw\/bgp\/hdf5\/1.6.5\/cnk1.0_bgxlc9bgxlf9011\/lib$/;"	m
HDF5_LIBS	Makefile	/^HDF5_LIBS = -lhdf5$/;"	m
HEADERS	Makefile	/^HEADERS = $(include_HEADERS)$/;"	m
INCLUDES	Makefile	/^INCLUDES = -I$(top_srcdir) $/;"	m
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM_ENV	Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_FLAG	Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBRARIES	Makefile	/^LIBRARIES = $(lib_LIBRARIES)$/;"	m
LIBS	Makefile	/^LIBS =   $/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LINK	Makefile	/^LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\$/;"	m
LL_IOC_LOV_GETSTRIPE	adios_mpi.c	299;"	d	file:
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LOGHDR	adios_provenance.c	/^static char LOGHDR[]="provenance method:";$/;"	v	file:
LOV_USER_MAGIC	adios_mpi.c	298;"	d	file:
LTCOMPILE	Makefile	/^LTCOMPILE = $(LIBTOOL) --mode=compile --tag=CC $(CC) $(DEFS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LUSTRE_SUPER_MAGIC	adios_mpi.c	297;"	d	file:
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/gpfs\/fs0\/cgj\/adios.svn\/trunk\/config\/missing --run makeinfo$/;"	m
MATCH_STRING_TO_METHOD	adios_transport_hooks.h	82;"	d
METASOURCES	Makefile	/^METASOURCES = AUTO$/;"	m
MIN_MAX	adios_internals.c	6200;"	d	file:
MIN_MAX	adios_internals.c	6221;"	d	file:
MPICC	Makefile	/^MPICC = mpixlc_r$/;"	m
MPIFC	Makefile	/^MPIFC = mpixlf90_r$/;"	m
MPILIBS	Makefile	/^MPILIBS =  $/;"	m
MXML_CPPFLAGS	Makefile	/^MXML_CPPFLAGS = -I\/ccs\/proj\/e2e\/adios\/bgp\/include$/;"	m
MXML_LDFLAGS	Makefile	/^MXML_LDFLAGS = -L\/ccs\/proj\/e2e\/adios\/bgp\/lib$/;"	m
MXML_LIBS	Makefile	/^MXML_LIBS = -lmxml$/;"	m
NETCDF_CPPFLAGS	Makefile	/^NETCDF_CPPFLAGS = -I\/sw\/bgp\/netcdf\/3.6.2\/cnk1.1_bgxlc9.0bgxlf11.1\/include$/;"	m
NETCDF_LDFLAGS	Makefile	/^NETCDF_LDFLAGS = -L\/sw\/bgp\/netcdf\/3.6.2\/cnk1.1_bgxlc9.0bgxlf11.1\/lib$/;"	m
NETCDF_LIBS	Makefile	/^NETCDF_LIBS = -lnetcdf$/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NUM_GP	adios_phdf5.c	17;"	d	file:
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OP	adios_datatap.c	/^static	char OP[OPLEN] = {'+', '-', '*', '\/'};$/;"	v	file:
OPLEN	adios_datatap.c	22;"	d	file:
OP_REP	adios_datatap.c	/^static 	char *OP_REP[OPLEN] = {"_plus_", "_minus_", "_mult_", "_div_"};$/;"	v	file:
PACKAGE	Makefile	/^PACKAGE = ADIOS$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = $/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PHDF5_CPPFLAGS	Makefile	/^PHDF5_CPPFLAGS = -I\/sw\/bgp\/hdf5\/1.6.5\/cnk1.0_mpixlc9mpixlf9011\/include $(am__append_2)$/;"	m
PHDF5_LDFLAGS	Makefile	/^PHDF5_LDFLAGS = -L\/sw\/bgp\/hdf5\/1.6.5\/cnk1.0_mpixlc9mpixlf9011\/lib$/;"	m
PHDF5_LIBS	Makefile	/^PHDF5_LIBS = -lhdf5$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SOURCES	Makefile	/^SOURCES = $(libadios_a_SOURCES) $(libadios_int_a_SOURCES) $(libadios_phdf5_a_SOURCES)$/;"	m
SOURCES	Makefile	/^SOURCES = $(libadios_a_SOURCES) $(libadios_int_a_SOURCES) \\$/;"	m
STARTINGSIZE	adios_datatap.c	18;"	d	file:
STRIP	Makefile	/^STRIP = strip$/;"	m
STRIPPROG	Makefile	/^	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install$/;"	m
STR_LEN	adios_mpi_cio.c	18;"	d	file:
VERSION	Makefile	/^VERSION = 0.8$/;"	m
_check_other_methods	adios_provenance.c	/^static void _check_other_methods(struct adios_file_struct * fd$/;"	f	file:
_connect_to_listener	adios_provenance.c	/^static int _connect_to_listener (char * host, int port)$/;"	f	file:
_debug_print_index	adios_provenance.c	/^static void _debug_print_index(char *ext$/;"	f	file:
_fix_offsets	adios_provenance.c	/^static void _fix_offsets(struct adios_index_process_group_struct_v1 * pg_root $/;"	f	file:
_look_for_listener	adios_provenance.c	/^static void _look_for_listener(char *env_var_name$/;"	f	file:
_parse_hoststr	adios_provenance.c	/^static void _parse_hoststr (char *str, int default_port, char **host, int *port)$/;"	f	file:
_var_to_comm	adios_provenance.c	/^static MPI_Comm _var_to_comm (enum ADIOS_FLAG host_language_fortran, void * data)$/;"	f	file:
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = mpixlc_r$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_F77	Makefile	/^ac_ct_F77 = f77$/;"	m
ac_ct_FC	Makefile	/^ac_ct_FC = $/;"	m
ac_ct_RANLIB	Makefile	/^ac_ct_RANLIB = ranlib$/;"	m
ac_ct_STRIP	Makefile	/^ac_ct_STRIP = strip$/;"	m
adios_DART_data_struct	adios_dart.c	/^struct adios_DART_data_struct$/;"	s	file:
adios_MPI_Collective_data_struct	adios_mpi_cio.c	/^struct adios_MPI_Collective_data_struct$/;"	s	file:
adios_MPI_data_struct	adios_mpi.c	/^struct adios_MPI_data_struct$/;"	s	file:
adios_MPI_data_struct	adios_mpi_nwu.c	/^struct adios_MPI_data_struct$/;"	s	file:
adios_MPI_write_buffer	adios_mpi.c	/^struct adios_MPI_write_buffer {$/;"	s	file:
adios_POSIX_data_struct	adios_posix.c	/^struct adios_POSIX_data_struct$/;"	s	file:
adios_PROVENANCE_data_struct	adios_provenance.c	/^struct adios_PROVENANCE_data_struct$/;"	s	file:
adios_add_method_to_group	adios_internals.c	/^void adios_add_method_to_group (struct adios_method_list_struct ** root$/;"	f
adios_allocate_buffer	adios.c	/^int adios_allocate_buffer ()$/;"	f
adios_allocate_buffer_	adios.c	/^void adios_allocate_buffer_ (int * err)$/;"	f
adios_append_attribute	adios_internals.c	/^void adios_append_attribute (struct adios_attribute_struct ** root$/;"	f
adios_append_dimension	adios_internals.c	/^void adios_append_dimension (struct adios_dimension_struct ** root$/;"	f
adios_append_group	adios_internals.c	/^void adios_append_group (struct adios_group_struct * group)$/;"	f
adios_append_mesh_cell_list	adios_internals.c	/^static void adios_append_mesh_cell_list$/;"	f	file:
adios_append_mesh_item	adios_internals.c	/^static void adios_append_mesh_item (struct adios_mesh_item_list_struct ** root$/;"	f	file:
adios_append_mesh_var	adios_internals.c	/^static void adios_append_mesh_var (struct adios_mesh_var_list_struct ** root$/;"	f	file:
adios_append_method	adios_internals.c	/^void adios_append_method (struct adios_method_struct * method)$/;"	f
adios_append_var	adios_internals.c	/^enum ADIOS_FLAG adios_append_var (struct adios_var_struct ** root$/;"	f
adios_attribute_struct	adios_internals.h	/^struct adios_attribute_struct$/;"	s
adios_attribute_struct_v1	adios_bp_v1.h	/^struct adios_attribute_struct_v1$/;"	s
adios_attributes_header_struct_v1	adios_bp_v1.h	/^struct adios_attributes_header_struct_v1$/;"	s
adios_bind_socket	adios_socket.c	/^int adios_bind_socket(int socketid,struct sockaddr_in *address)$/;"	f
adios_blocking_read_request	adios_socket.c	/^int adios_blocking_read_request(int socketid,char *buffer,int maxlength)$/;"	f
adios_blocking_write_request	adios_socket.c	/^int adios_blocking_write_request(int socketid,char *buffer,int length)$/;"	f
adios_bp_buffer_struct_v1	adios_bp_v1.h	/^struct adios_bp_buffer_struct_v1$/;"	s
adios_buffer_alloc_percentage	adios_internals.c	/^static int adios_buffer_alloc_percentage = 0;  \/\/ 1 = yes, 0 = no$/;"	v	file:
adios_buffer_alloc_when	adios_internals.c	/^                                    } adios_buffer_alloc_when$/;"	v	file:
adios_buffer_part_entry	adios_internals.h	/^struct adios_buffer_part_entry$/;"	s
adios_buffer_size_max	adios_internals.c	/^static uint64_t adios_buffer_size_max = 0;$/;"	v	file:
adios_buffer_size_remaining	adios_internals.c	/^static uint64_t adios_buffer_size_remaining = 0;$/;"	v	file:
adios_buffer_size_requested	adios_internals.c	/^static uint64_t adios_buffer_size_requested = 0;$/;"	v	file:
adios_buffer_stripe_aligned	adios_internals.c	/^static int adios_buffer_stripe_aligned = 0;$/;"	v	file:
adios_buffer_struct_clear	adios_bp_v1.c	/^void adios_buffer_struct_clear (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_buffer_struct_init	adios_bp_v1.c	/^void adios_buffer_struct_init (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_build_index_v1	adios_internals.c	/^void adios_build_index_v1 (struct adios_file_struct * fd$/;"	f
adios_byte	adios_types.h	/^                     ,adios_byte = 0                 \/\/ (1)$/;"	e	enum:ADIOS_DATATYPES
adios_calc_attribute_overhead_v1	adios_internals.c	/^uint32_t adios_calc_attribute_overhead_v1 (struct adios_attribute_struct * a)$/;"	f
adios_calc_overhead_v1	adios_internals.c	/^uint64_t adios_calc_overhead_v1 (struct adios_file_struct * fd)$/;"	f
adios_calc_var_characteristics_dims_overhead	adios_internals.c	/^static uint16_t adios_calc_var_characteristics_dims_overhead$/;"	f	file:
adios_calc_var_characteristics_overhead	adios_internals.c	/^static uint16_t adios_calc_var_characteristics_overhead$/;"	f	file:
adios_calc_var_overhead_v1	adios_internals.c	/^uint16_t adios_calc_var_overhead_v1 (struct adios_var_struct * v)$/;"	f
adios_characteristic_dimensions	adios_bp_v1.h	/^    ,adios_characteristic_dimensions = 4$/;"	e	enum:ADIOS_CHARACTERISTICS
adios_characteristic_max	adios_bp_v1.h	/^    ,adios_characteristic_max        = 2$/;"	e	enum:ADIOS_CHARACTERISTICS
adios_characteristic_min	adios_bp_v1.h	/^    ,adios_characteristic_min        = 1$/;"	e	enum:ADIOS_CHARACTERISTICS
adios_characteristic_offset	adios_bp_v1.h	/^    ,adios_characteristic_offset     = 3$/;"	e	enum:ADIOS_CHARACTERISTICS
adios_characteristic_value	adios_bp_v1.h	/^     adios_characteristic_value      = 0$/;"	e	enum:ADIOS_CHARACTERISTICS
adios_characteristic_var_id	adios_bp_v1.h	/^    ,adios_characteristic_var_id     = 5$/;"	e	enum:ADIOS_CHARACTERISTICS
adios_cleanup	adios_internals.c	/^void adios_cleanup ()$/;"	f
adios_clear_attribute_v1	adios_bp_v1.c	/^int adios_clear_attribute_v1 (struct adios_attribute_struct_v1 * attribute)$/;"	f
adios_clear_attributes_index_v1	adios_internals.c	/^static void adios_clear_attributes_index_v1$/;"	f	file:
adios_clear_index_v1	adios_internals.c	/^void adios_clear_index_v1 (struct adios_index_process_group_struct_v1 * pg_root$/;"	f
adios_clear_process_group_header_v1	adios_bp_v1.c	/^int adios_clear_process_group_header_v1 ($/;"	f
adios_clear_process_groups_index_v1	adios_internals.c	/^static void adios_clear_process_groups_index_v1 ($/;"	f	file:
adios_clear_var_header_v1	adios_bp_v1.c	/^int adios_clear_var_header_v1 (struct adios_var_header_struct_v1 * var_header)$/;"	f
adios_clear_vars_index_v1	adios_internals.c	/^static void adios_clear_vars_index_v1 (struct adios_index_var_struct_v1 * root)$/;"	f	file:
adios_close	adios.c	/^int adios_close (int64_t fd_p)$/;"	f
adios_close_	adios.c	/^void adios_close_ (int64_t * fd_p, int * err)$/;"	f
adios_close_fn	adios_internals.h	/^    ADIOS_CLOSE_FN adios_close_fn;$/;"	m	struct:adios_transport_struct
adios_close_socket	adios_socket.c	/^int adios_close_socket(int socketid)$/;"	f
adios_common_declare_group	adios_internals.c	/^int adios_common_declare_group (int64_t * id, const char * name$/;"	f
adios_common_define_attribute	adios_internals.c	/^int adios_common_define_attribute (int64_t group, const char * name$/;"	f
adios_common_define_var	adios_internals.c	/^int adios_common_define_var (int64_t group_id, const char * name$/;"	f
adios_common_get_group	adios_internals.c	/^void adios_common_get_group (int64_t * group_id, const char * name)$/;"	f
adios_common_select_method	adios_internals.c	/^int adios_common_select_method (int priority, const char * method$/;"	f
adios_complex	adios_types.h	/^                     ,adios_complex = 10             \/\/ (8)$/;"	e	enum:ADIOS_DATATYPES
adios_connect_socket	adios_socket.c	/^int adios_connect_socket(int socketid,struct sockaddr_in *address)$/;"	f
adios_create_socket	adios_socket.c	/^int adios_create_socket(int *socketid)$/;"	f
adios_dart_close	adios_dart.c	/^void adios_dart_close (struct adios_file_struct * fd$/;"	f
adios_dart_end_iteration	adios_dart.c	/^void adios_dart_end_iteration (struct adios_method_struct * method)$/;"	f
adios_dart_finalize	adios_dart.c	/^void adios_dart_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_dart_get_write_buffer	adios_dart.c	/^void adios_dart_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_dart_init	adios_dart.c	/^void adios_dart_init (const char * parameters$/;"	f
adios_dart_initialized	adios_dart.c	/^static int adios_dart_initialized = 0;$/;"	v	file:
adios_dart_open	adios_dart.c	/^int adios_dart_open (struct adios_file_struct * fd$/;"	f
adios_dart_read	adios_dart.c	/^void adios_dart_read (struct adios_file_struct * fd$/;"	f
adios_dart_should_buffer	adios_dart.c	/^enum ADIOS_FLAG adios_dart_should_buffer (struct adios_file_struct * fd$/;"	f
adios_dart_start_calculation	adios_dart.c	/^void adios_dart_start_calculation (struct adios_method_struct * method)$/;"	f
adios_dart_stop_calculation	adios_dart.c	/^void adios_dart_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_dart_write	adios_dart.c	/^void adios_dart_write (struct adios_file_struct * fd$/;"	f
adios_datatap_close	adios_datatap.c	/^extern void adios_datatap_close(struct adios_file_struct *fd,$/;"	f
adios_datatap_end_iteration	adios_datatap.c	/^extern void adios_datatap_end_iteration (struct adios_method_struct *method)$/;"	f
adios_datatap_finalize	adios_datatap.c	/^extern void adios_datatap_finalize (int mype, struct adios_method_struct *method)$/;"	f
adios_datatap_get_write_buffer	adios_datatap.c	/^extern void adios_datatap_get_write_buffer (struct adios_file_struct * fd,$/;"	f
adios_datatap_init	adios_datatap.c	/^extern void adios_datatap_init (const char *params, struct adios_method_struct *method)$/;"	f
adios_datatap_open	adios_datatap.c	/^extern int adios_datatap_open (struct adios_file_struct * fd, $/;"	f
adios_datatap_read	adios_datatap.c	/^void adios_datatap_read (struct adios_file_struct * fd,$/;"	f
adios_datatap_should_buffer	adios_datatap.c	/^enum ADIOS_FLAG adios_datatap_should_buffer (struct adios_file_struct * fd$/;"	f
adios_datatap_start_calculation	adios_datatap.c	/^extern void adios_datatap_start_calculation (struct adios_method_struct *method)$/;"	f
adios_datatap_stop_calculation	adios_datatap.c	/^extern void adios_datatap_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_datatap_write	adios_datatap.c	/^extern void adios_datatap_write(struct adios_file_struct *fd,$/;"	f
adios_declare_group	adios.c	/^int adios_declare_group (int64_t * id, const char * name$/;"	f
adios_declare_group_	adios.c	/^void adios_declare_group_ (int64_t * id, const char * name$/;"	f
adios_define_attribute	adios.c	/^int adios_define_attribute (int64_t group, const char * name$/;"	f
adios_define_attribute_	adios.c	/^void adios_define_attribute_ (int64_t * group, const char * name$/;"	f
adios_define_var	adios.c	/^int adios_define_var (int64_t group_id, const char * name$/;"	f
adios_define_var_	adios.c	/^void adios_define_var_ (int64_t * group_id, const char * name$/;"	f
adios_dimension_item_struct	adios_internals.h	/^struct adios_dimension_item_struct$/;"	s
adios_dimension_item_struct_v1	adios_bp_v1.h	/^struct adios_dimension_item_struct_v1$/;"	s
adios_dimension_struct	adios_internals.h	/^struct adios_dimension_struct$/;"	s
adios_dimension_struct_v1	adios_bp_v1.h	/^struct adios_dimension_struct_v1$/;"	s
adios_double	adios_types.h	/^                     ,adios_double = 6               \/\/ (8)$/;"	e	enum:ADIOS_DATATYPES
adios_double_complex	adios_types.h	/^                     ,adios_double_complex = 11      \/\/ (16)$/;"	e	enum:ADIOS_DATATYPES
adios_dupe_data_scalar	adios_bp_v1.c	/^void * adios_dupe_data_scalar (enum ADIOS_DATATYPES type, void * in)$/;"	f
adios_end_iteration	adios.c	/^int adios_end_iteration ()$/;"	f
adios_end_iteration_	adios.c	/^void adios_end_iteration_ (int * err)$/;"	f
adios_end_iteration_fn	adios_internals.h	/^    ADIOS_END_ITERATION_FN adios_end_iteration_fn;$/;"	m	struct:adios_transport_struct
adios_extract_string	adios_internals.c	/^void adios_extract_string (char ** out, const char * in, int size)$/;"	f
adios_file_mode_to_string	adios_internals.c	/^const char * adios_file_mode_to_string (int mode)$/;"	f
adios_file_struct	adios_internals.h	/^struct adios_file_struct$/;"	s
adios_finalize	adios.c	/^int adios_finalize (int mype)$/;"	f
adios_finalize_	adios.c	/^void adios_finalize_ (int * mype, int * err)$/;"	f
adios_finalize_fn	adios_internals.h	/^    ADIOS_FINALIZE_FN adios_finalize_fn;$/;"	m	struct:adios_transport_struct
adios_find_attribute_by_id	adios_internals.c	/^struct adios_attribute_struct * adios_find_attribute_by_id$/;"	f
adios_find_attribute_by_name	adios_internals.c	/^struct adios_attribute_struct * adios_find_attribute_by_name$/;"	f
adios_find_var_by_id	adios_internals.c	/^struct adios_var_struct * adios_find_var_by_id (struct adios_var_struct * root$/;"	f
adios_find_var_by_name	adios_internals.c	/^struct adios_var_struct * adios_find_var_by_name (struct adios_var_struct * root$/;"	f
adios_flag_no	adios_types.h	/^                ,adios_flag_no = 2$/;"	e	enum:ADIOS_FLAG
adios_flag_unknown	adios_types.h	/^enum ADIOS_FLAG {adios_flag_unknown = 0$/;"	e	enum:ADIOS_FLAG
adios_flag_yes	adios_types.h	/^                ,adios_flag_yes = 1$/;"	e	enum:ADIOS_FLAG
adios_generate_var_characteristics_v1	adios_internals.c	/^int adios_generate_var_characteristics_v1 (struct adios_file_struct * fd$/;"	f
adios_get_groups	adios_internals.c	/^struct adios_group_list_struct * adios_get_groups ()$/;"	f
adios_get_methods	adios_internals.c	/^struct adios_method_list_struct * adios_get_methods ()$/;"	f
adios_get_own_hostname	adios_socket.c	/^int adios_get_own_hostname(char *host)$/;"	f
adios_get_remote_hostname	adios_socket.c	/^int adios_get_remote_hostname(int socket,char *remotehost)$/;"	f
adios_get_type_size	adios_internals.c	/^uint64_t adios_get_type_size (enum ADIOS_DATATYPES type, void * var)$/;"	f
adios_get_var_size	adios_internals.c	/^uint64_t adios_get_var_size (struct adios_var_struct * var$/;"	f
adios_get_write_buffer	adios.c	/^int adios_get_write_buffer (int64_t fd_p, const char * name$/;"	f
adios_get_write_buffer_	adios.c	/^void adios_get_write_buffer_ (int64_t * fd_p, const char * name$/;"	f
adios_get_write_buffer_fn	adios_internals.h	/^    ADIOS_GET_WRITE_BUFFER_FN adios_get_write_buffer_fn;$/;"	m	struct:adios_transport_struct
adios_getsize	adios_phdf5.c	/^int adios_getsize(enum ADIOS_DATATYPES type, void *val) {$/;"	f
adios_group_list_struct	adios_internals.h	/^struct adios_group_list_struct$/;"	s
adios_group_size	adios.c	/^int adios_group_size (int64_t fd_p, uint64_t data_size$/;"	f
adios_group_size_	adios.c	/^void adios_group_size_ (int64_t * fd_p, int64_t * data_size$/;"	f
adios_group_struct	adios_internals.h	/^struct adios_group_struct$/;"	s
adios_groups	adios_internals.c	/^static struct adios_group_list_struct * adios_groups = 0;$/;"	v	file:
adios_host_language_fortran	adios_bp_v1.h	/^    enum ADIOS_FLAG adios_host_language_fortran;$/;"	m	struct:adios_index_process_group_struct_v1
adios_host_language_fortran	adios_internals.c	/^enum ADIOS_FLAG adios_host_language_fortran = adios_flag_yes;$/;"	v
adios_host_language_fortran	adios_internals.h	/^    enum ADIOS_FLAG adios_host_language_fortran;$/;"	m	struct:adios_group_struct
adios_index_attribute_struct_v1	adios_bp_v1.h	/^struct adios_index_attribute_struct_v1$/;"	s
adios_index_characteristic_dims_struct_v1	adios_bp_v1.h	/^struct adios_index_characteristic_dims_struct_v1$/;"	s
adios_index_characteristic_struct_v1	adios_bp_v1.h	/^struct adios_index_characteristic_struct_v1$/;"	s
adios_index_process_group_struct_v1	adios_bp_v1.h	/^struct adios_index_process_group_struct_v1$/;"	s
adios_index_var_struct_v1	adios_bp_v1.h	/^struct adios_index_var_struct_v1$/;"	s
adios_init	adios.c	/^int adios_init (const char * config)$/;"	f
adios_init_	adios.c	/^void adios_init_ (const char * config, int * err, int config_size)$/;"	f
adios_init_buffer_read_attributes_index	adios_bp_v1.c	/^void adios_init_buffer_read_attributes_index$/;"	f
adios_init_buffer_read_index_offsets	adios_bp_v1.c	/^void adios_init_buffer_read_index_offsets (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_init_buffer_read_process_group	adios_bp_v1.c	/^void adios_init_buffer_read_process_group (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_init_buffer_read_process_group_index	adios_bp_v1.c	/^void adios_init_buffer_read_process_group_index ($/;"	f
adios_init_buffer_read_vars_index	adios_bp_v1.c	/^void adios_init_buffer_read_vars_index (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_init_buffer_read_version	adios_bp_v1.c	/^void adios_init_buffer_read_version (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_init_fn	adios_internals.h	/^    ADIOS_INIT_FN adios_init_fn;$/;"	m	struct:adios_transport_struct
adios_init_transports	adios_transport_hooks.c	/^void adios_init_transports (struct adios_transport_struct ** t)$/;"	f
adios_init_transports	adios_transport_hooks_dummy.c	/^void adios_init_transports (struct adios_transport_struct ** t)$/;"	f
adios_integer	adios_types.h	/^                     ,adios_integer = 2              \/\/ (4)$/;"	e	enum:ADIOS_DATATYPES
adios_long	adios_types.h	/^                     ,adios_long = 4                 \/\/ (8)$/;"	e	enum:ADIOS_DATATYPES
adios_long_double	adios_types.h	/^                     ,adios_long_double = 7          \/\/ (16)$/;"	e	enum:ADIOS_DATATYPES
adios_merge_index_v1	adios_internals.c	/^void adios_merge_index_v1 (struct adios_index_process_group_struct_v1 ** p1$/;"	f
adios_mesh_cell_list_list_struct	adios_internals.h	/^struct adios_mesh_cell_list_list_struct$/;"	s
adios_mesh_cell_list_struct	adios_internals.h	/^struct adios_mesh_cell_list_struct$/;"	s
adios_mesh_item_list_struct	adios_internals.h	/^struct adios_mesh_item_list_struct$/;"	s
adios_mesh_item_struct	adios_internals.h	/^struct adios_mesh_item_struct$/;"	s
adios_mesh_rectilinear_struct	adios_internals.h	/^struct adios_mesh_rectilinear_struct$/;"	s
adios_mesh_struct	adios_internals.h	/^struct adios_mesh_struct$/;"	s
adios_mesh_structured_struct	adios_internals.h	/^struct adios_mesh_structured_struct$/;"	s
adios_mesh_uniform_struct	adios_internals.h	/^struct adios_mesh_uniform_struct$/;"	s
adios_mesh_unstructured_struct	adios_internals.h	/^struct adios_mesh_unstructured_struct$/;"	s
adios_mesh_var_list_struct	adios_internals.h	/^struct adios_mesh_var_list_struct$/;"	s
adios_method_buffer_alloc	adios_internals.c	/^uint64_t adios_method_buffer_alloc (uint64_t size)$/;"	f
adios_method_buffer_free	adios_internals.c	/^int adios_method_buffer_free (uint64_t size)$/;"	f
adios_method_info_struct_v1	adios_bp_v1.h	/^struct adios_method_info_struct_v1$/;"	s
adios_method_list_struct	adios_internals.h	/^struct adios_method_list_struct$/;"	s
adios_method_struct	adios_internals.h	/^struct adios_method_struct$/;"	s
adios_methods	adios_internals.c	/^static struct adios_method_list_struct * adios_methods = 0;$/;"	v	file:
adios_mode_append	adios_internals.h	/^                       ,adios_mode_append = 4$/;"	e	enum:ADIOS_METHOD_MODE
adios_mode_read	adios_internals.h	/^                       ,adios_mode_read   = 2$/;"	e	enum:ADIOS_METHOD_MODE
adios_mode_update	adios_internals.h	/^                       ,adios_mode_update = 3 \/\/ not supported yet$/;"	e	enum:ADIOS_METHOD_MODE
adios_mode_write	adios_internals.h	/^enum ADIOS_METHOD_MODE {adios_mode_write  = 1$/;"	e	enum:ADIOS_METHOD_MODE
adios_mpi_buffer_get_position	adios_mpi.c	/^adios_mpi_buffer_get_position(struct adios_MPI_data_struct *md, $/;"	f	file:
adios_mpi_buffer_seek	adios_mpi.c	/^adios_mpi_buffer_seek(struct adios_MPI_data_struct *md, $/;"	f	file:
adios_mpi_buffer_write	adios_mpi.c	/^adios_mpi_buffer_write(struct adios_MPI_data_struct *md, $/;"	f	file:
adios_mpi_build_file_offset	adios_mpi.c	/^adios_mpi_build_file_offset(struct adios_MPI_data_struct *md,$/;"	f	file:
adios_mpi_cio_close	adios_mpi_cio.c	/^void adios_mpi_cio_close (struct adios_file_struct * fd$/;"	f
adios_mpi_cio_do_read	adios_mpi_cio.c	/^static void adios_mpi_cio_do_read (struct adios_file_struct * fd$/;"	f	file:
adios_mpi_cio_do_write	adios_mpi_cio.c	/^static void adios_mpi_cio_do_write (struct adios_file_struct * fd$/;"	f	file:
adios_mpi_cio_end_iteration	adios_mpi_cio.c	/^void adios_mpi_cio_end_iteration (struct adios_method_struct * method)$/;"	f
adios_mpi_cio_finalize	adios_mpi_cio.c	/^void adios_mpi_cio_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_mpi_cio_get_write_buffer	adios_mpi_cio.c	/^void adios_mpi_cio_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_mpi_cio_init	adios_mpi_cio.c	/^void adios_mpi_cio_init (const char * parameters$/;"	f
adios_mpi_cio_initialized	adios_mpi_cio.c	/^static int adios_mpi_cio_initialized = 0;$/;"	v	file:
adios_mpi_cio_open	adios_mpi_cio.c	/^int adios_mpi_cio_open (struct adios_file_struct * fd$/;"	f
adios_mpi_cio_read	adios_mpi_cio.c	/^void adios_mpi_cio_read (struct adios_file_struct * fd$/;"	f
adios_mpi_cio_should_buffer	adios_mpi_cio.c	/^enum ADIOS_FLAG adios_mpi_cio_should_buffer (struct adios_file_struct * fd$/;"	f
adios_mpi_cio_start_calculation	adios_mpi_cio.c	/^void adios_mpi_cio_start_calculation (struct adios_method_struct * method)$/;"	f
adios_mpi_cio_stop_calculation	adios_mpi_cio.c	/^void adios_mpi_cio_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_mpi_cio_write	adios_mpi_cio.c	/^void adios_mpi_cio_write (struct adios_file_struct * fd$/;"	f
adios_mpi_close	adios_mpi.c	/^void adios_mpi_close (struct adios_file_struct * fd$/;"	f
adios_mpi_do_read	adios_mpi.c	/^static void adios_mpi_do_read (struct adios_file_struct * fd$/;"	f	file:
adios_mpi_end_iteration	adios_mpi.c	/^void adios_mpi_end_iteration (struct adios_method_struct * method)$/;"	f
adios_mpi_file_write	adios_mpi.c	/^adios_mpi_file_write(MPI_File fh, struct adios_MPI_write_buffer *wbuf,$/;"	f	file:
adios_mpi_finalize	adios_mpi.c	/^void adios_mpi_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_mpi_get_stripe_size	adios_mpi.c	/^static int adios_mpi_get_stripe_size (char *filename)$/;"	f	file:
adios_mpi_get_write_buffer	adios_mpi.c	/^void adios_mpi_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_mpi_info	adios_mpi_cio.c	/^MPI_Info adios_mpi_info = MPI_INFO_NULL;$/;"	v
adios_mpi_init	adios_mpi.c	/^void adios_mpi_init (const char * parameters$/;"	f
adios_mpi_initialized	adios_mpi.c	/^static int adios_mpi_initialized = 0;$/;"	v	file:
adios_mpi_nwu_close	adios_mpi_nwu.c	/^void adios_mpi_nwu_close (struct adios_file_struct * fd$/;"	f
adios_mpi_nwu_do_read	adios_mpi_nwu.c	/^static void adios_mpi_nwu_do_read (struct adios_file_struct * fd$/;"	f	file:
adios_mpi_nwu_end_iteration	adios_mpi_nwu.c	/^void adios_mpi_nwu_end_iteration (struct adios_method_struct * method)$/;"	f
adios_mpi_nwu_finalize	adios_mpi_nwu.c	/^void adios_mpi_nwu_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_mpi_nwu_get_striping_unit	adios_mpi_nwu.c	/^adios_mpi_nwu_get_striping_unit(MPI_File fh, char *filename)$/;"	f	file:
adios_mpi_nwu_get_write_buffer	adios_mpi_nwu.c	/^void adios_mpi_nwu_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_mpi_nwu_init	adios_mpi_nwu.c	/^void adios_mpi_nwu_init (const char * parameters$/;"	f
adios_mpi_nwu_initialized	adios_mpi_nwu.c	/^static int adios_mpi_nwu_initialized = 0;$/;"	v	file:
adios_mpi_nwu_open	adios_mpi_nwu.c	/^int adios_mpi_nwu_open (struct adios_file_struct * fd$/;"	f
adios_mpi_nwu_read	adios_mpi_nwu.c	/^void adios_mpi_nwu_read (struct adios_file_struct * fd$/;"	f
adios_mpi_nwu_should_buffer	adios_mpi_nwu.c	/^enum ADIOS_FLAG adios_mpi_nwu_should_buffer (struct adios_file_struct * fd$/;"	f
adios_mpi_nwu_start_calculation	adios_mpi_nwu.c	/^void adios_mpi_nwu_start_calculation (struct adios_method_struct * method)$/;"	f
adios_mpi_nwu_stop_calculation	adios_mpi_nwu.c	/^void adios_mpi_nwu_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_mpi_nwu_striping_unit_write	adios_mpi_nwu.c	/^adios_mpi_nwu_striping_unit_write(MPI_File    fh,$/;"	f	file:
adios_mpi_nwu_write	adios_mpi_nwu.c	/^void adios_mpi_nwu_write (struct adios_file_struct * fd$/;"	f
adios_mpi_open	adios_mpi.c	/^int adios_mpi_open (struct adios_file_struct * fd$/;"	f
adios_mpi_read	adios_mpi.c	/^void adios_mpi_read (struct adios_file_struct * fd$/;"	f
adios_mpi_set_stripe_size_aligned	adios_mpi.c	/^adios_mpi_set_stripe_size_aligned(struct adios_file_struct *fd, $/;"	f	file:
adios_mpi_set_write_buffer	adios_mpi.c	/^adios_mpi_set_write_buffer(struct adios_MPI_data_struct *md,$/;"	f	file:
adios_mpi_should_buffer	adios_mpi.c	/^enum ADIOS_FLAG adios_mpi_should_buffer (struct adios_file_struct * fd$/;"	f
adios_mpi_start_calculation	adios_mpi.c	/^void adios_mpi_start_calculation (struct adios_method_struct * method)$/;"	f
adios_mpi_stop_calculation	adios_mpi.c	/^void adios_mpi_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_mpi_write	adios_mpi.c	/^void adios_mpi_write (struct adios_file_struct * fd$/;"	f
adios_mpi_write_buffer_init	adios_mpi.c	/^adios_mpi_write_buffer_init(struct adios_MPI_write_buffer *write_buffer)$/;"	f	file:
adios_multiply_dimensions	adios_internals.c	/^static int adios_multiply_dimensions (uint64_t * size$/;"	f	file:
adios_open	adios.c	/^int adios_open (int64_t * fd, const char * group_name, const char * name$/;"	f
adios_open_	adios.c	/^void adios_open_ (int64_t * fd, const char * group_name, const char * name$/;"	f
adios_open_fn	adios_internals.h	/^    ADIOS_OPEN_FN adios_open_fn;$/;"	m	struct:adios_transport_struct
adios_parse_attribute_v1	adios_bp_v1.c	/^int adios_parse_attribute_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_attributes_header_v1	adios_bp_v1.c	/^int adios_parse_attributes_header_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_attributes_index_v1	adios_bp_v1.c	/^int adios_parse_attributes_index_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_buffer_struct	adios_internals.h	/^struct adios_parse_buffer_struct$/;"	s
adios_parse_config	adios_internals.c	/^int adios_parse_config (const char * config)$/;"	f
adios_parse_dimension	adios_internals.c	/^int adios_parse_dimension (const char * dimension$/;"	f
adios_parse_index_offsets_v1	adios_bp_v1.c	/^int adios_parse_index_offsets_v1 (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_parse_method	adios_transport_hooks.c	/^int adios_parse_method (const char * buf, enum ADIOS_IO_METHOD * method$/;"	f
adios_parse_method	adios_transport_hooks_dummy.c	/^int adios_parse_method (const char * buf, enum ADIOS_IO_METHOD * method$/;"	f
adios_parse_process_group_header_v1	adios_bp_v1.c	/^int adios_parse_process_group_header_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_process_group_index_v1	adios_bp_v1.c	/^int adios_parse_process_group_index_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_scalar_string	adios_internals.c	/^int adios_parse_scalar_string (enum ADIOS_DATATYPES type, char * value$/;"	f
adios_parse_var_data_header_v1	adios_bp_v1.c	/^int adios_parse_var_data_header_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_var_data_payload_v1	adios_bp_v1.c	/^int adios_parse_var_data_payload_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_vars_header_v1	adios_bp_v1.c	/^int adios_parse_vars_header_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_vars_index_v1	adios_bp_v1.c	/^int adios_parse_vars_index_v1 (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_parse_version	adios_bp_v1.c	/^int adios_parse_version (struct adios_bp_buffer_struct_v1 * b$/;"	f
adios_phdf5_close	adios_phdf5.c	/^void adios_phdf5_close (struct adios_file_struct * fd$/;"	f
adios_phdf5_data_struct	adios_phdf5.c	/^struct adios_phdf5_data_struct$/;"	s	file:
adios_phdf5_do_read	adios_phdf5.c	/^static void adios_phdf5_do_read (struct adios_file_struct * fd$/;"	f	file:
adios_phdf5_end_iteration	adios_phdf5.c	/^void adios_phdf5_end_iteration (struct adios_method_struct * method)$/;"	f
adios_phdf5_finalize	adios_phdf5.c	/^void adios_phdf5_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_phdf5_finalize	adios_phdf5.c	/^void adios_phdf5_finalize (int mype, struct adios_method_struct * method){}$/;"	f
adios_phdf5_get_write_buffer	adios_phdf5.c	/^void adios_phdf5_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_phdf5_init	adios_phdf5.c	/^void adios_phdf5_init(const char *parameters$/;"	f
adios_phdf5_initialized	adios_phdf5.c	/^int adios_phdf5_initialized = 0;$/;"	v
adios_phdf5_open	adios_phdf5.c	/^int adios_phdf5_open(struct adios_file_struct *fd$/;"	f
adios_phdf5_read	adios_phdf5.c	/^void adios_phdf5_read (struct adios_file_struct * fd$/;"	f
adios_phdf5_should_buffer	adios_phdf5.c	/^enum ADIOS_FLAG adios_phdf5_should_buffer (struct adios_file_struct * fd$/;"	f
adios_phdf5_start_calculation	adios_phdf5.c	/^void adios_phdf5_start_calculation (struct adios_method_struct * method)$/;"	f
adios_phdf5_stop_calculation	adios_phdf5.c	/^void adios_phdf5_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_phdf5_write	adios_phdf5.c	/^void adios_phdf5_write (struct adios_file_struct * fd$/;"	f
adios_posix_ascii_close	adios_posix_ascii.c	/^void adios_posix_ascii_close (struct adios_file_struct * fd$/;"	f
adios_posix_ascii_end_iteration	adios_posix_ascii.c	/^void adios_posix_ascii_end_iteration (struct adios_method_struct * method)$/;"	f
adios_posix_ascii_finalize	adios_posix_ascii.c	/^void adios_posix_ascii_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_posix_ascii_get_write_buffer	adios_posix_ascii.c	/^void adios_posix_ascii_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_posix_ascii_init	adios_posix_ascii.c	/^void adios_posix_ascii_init (const char * parameters$/;"	f
adios_posix_ascii_initialized	adios_posix_ascii.c	/^static int adios_posix_ascii_initialized = 0;$/;"	v	file:
adios_posix_ascii_open	adios_posix_ascii.c	/^int adios_posix_ascii_open (struct adios_file_struct * fd$/;"	f
adios_posix_ascii_read	adios_posix_ascii.c	/^void adios_posix_ascii_read (struct adios_file_struct * fd$/;"	f
adios_posix_ascii_should_buffer	adios_posix_ascii.c	/^enum ADIOS_FLAG adios_posix_ascii_should_buffer (struct adios_file_struct * fd$/;"	f
adios_posix_ascii_start_calculation	adios_posix_ascii.c	/^void adios_posix_ascii_start_calculation (struct adios_method_struct * method)$/;"	f
adios_posix_ascii_stop_calculation	adios_posix_ascii.c	/^void adios_posix_ascii_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_posix_ascii_write	adios_posix_ascii.c	/^void adios_posix_ascii_write (struct adios_file_struct * fd$/;"	f
adios_posix_close	adios_posix.c	/^void adios_posix_close (struct adios_file_struct * fd$/;"	f
adios_posix_close_internal	adios_bp_v1.c	/^void adios_posix_close_internal (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_posix_do_read	adios_posix.c	/^static void adios_posix_do_read (struct adios_file_struct * fd$/;"	f	file:
adios_posix_do_write	adios_posix.c	/^static void adios_posix_do_write (struct adios_file_struct * fd$/;"	f	file:
adios_posix_end_iteration	adios_posix.c	/^void adios_posix_end_iteration (struct adios_method_struct * method)$/;"	f
adios_posix_finalize	adios_posix.c	/^void adios_posix_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_posix_get_write_buffer	adios_posix.c	/^void adios_posix_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_posix_init	adios_posix.c	/^void adios_posix_init (const char * parameters$/;"	f
adios_posix_initialized	adios_posix.c	/^static int adios_posix_initialized = 0;$/;"	v	file:
adios_posix_open	adios_posix.c	/^int adios_posix_open (struct adios_file_struct * fd$/;"	f
adios_posix_open_read_internal	adios_bp_v1.c	/^int adios_posix_open_read_internal (const char * filename$/;"	f
adios_posix_read	adios_posix.c	/^void adios_posix_read (struct adios_file_struct * fd$/;"	f
adios_posix_read_attributes_index	adios_bp_v1.c	/^void adios_posix_read_attributes_index (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_posix_read_index_offsets	adios_bp_v1.c	/^void adios_posix_read_index_offsets (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_posix_read_process_group	adios_bp_v1.c	/^uint64_t adios_posix_read_process_group (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_posix_read_process_group_index	adios_bp_v1.c	/^void adios_posix_read_process_group_index (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_posix_read_vars_index	adios_bp_v1.c	/^void adios_posix_read_vars_index (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_posix_read_version	adios_bp_v1.c	/^void adios_posix_read_version (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_posix_should_buffer	adios_posix.c	/^enum ADIOS_FLAG adios_posix_should_buffer (struct adios_file_struct * fd$/;"	f
adios_posix_start_calculation	adios_posix.c	/^void adios_posix_start_calculation (struct adios_method_struct * method)$/;"	f
adios_posix_stop_calculation	adios_posix.c	/^void adios_posix_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_posix_write	adios_posix.c	/^void adios_posix_write (struct adios_file_struct * fd$/;"	f
adios_prepare_stripe_size_write	adios_mpi.c	/^adios_prepare_stripe_size_write(struct adios_file_struct *fd, $/;"	f	file:
adios_process_group_header_struct_v1	adios_bp_v1.h	/^struct adios_process_group_header_struct_v1$/;"	s
adios_provenance_close	adios_provenance.c	/^void adios_provenance_close (struct adios_file_struct * fd$/;"	f
adios_provenance_end_iteration	adios_provenance.c	/^void adios_provenance_end_iteration (struct adios_method_struct * method)$/;"	f
adios_provenance_finalize	adios_provenance.c	/^void adios_provenance_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_provenance_get_write_buffer	adios_provenance.c	/^void adios_provenance_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_provenance_init	adios_provenance.c	/^void adios_provenance_init (const char * parameters$/;"	f
adios_provenance_initialized	adios_provenance.c	/^static int adios_provenance_initialized = 0;$/;"	v	file:
adios_provenance_open	adios_provenance.c	/^int adios_provenance_open (struct adios_file_struct * fd$/;"	f
adios_provenance_outputmethod_file	adios_provenance.c	/^enum ADIOS_PROVENANCE_OUTPUTMETHOD {adios_provenance_outputmethod_file = 1$/;"	e	enum:ADIOS_PROVENANCE_OUTPUTMETHOD	file:
adios_provenance_outputmethod_socket	adios_provenance.c	/^				   ,adios_provenance_outputmethod_socket = 2$/;"	e	enum:ADIOS_PROVENANCE_OUTPUTMETHOD	file:
adios_provenance_read	adios_provenance.c	/^void adios_provenance_read (struct adios_file_struct * fd$/;"	f
adios_provenance_should_buffer	adios_provenance.c	/^enum ADIOS_FLAG adios_provenance_should_buffer (struct adios_file_struct * fd$/;"	f
adios_provenance_start_calculation	adios_provenance.c	/^void adios_provenance_start_calculation (struct adios_method_struct * method)$/;"	f
adios_provenance_stop_calculation	adios_provenance.c	/^void adios_provenance_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_provenance_write	adios_provenance.c	/^void adios_provenance_write (struct adios_file_struct * fd$/;"	f
adios_read	adios.c	/^int adios_read (int64_t fd_p, const char * name, void * buffer$/;"	f
adios_read_	adios.c	/^void adios_read_ (int64_t * fd_p, const char * name, void * buffer$/;"	f
adios_read_block	adios_socket.c	/^int adios_read_block(int socketid,char *buffer,int maxlength)$/;"	f
adios_read_fn	adios_internals.h	/^    ADIOS_READ_FN adios_read_fn;$/;"	m	struct:adios_transport_struct
adios_real	adios_types.h	/^                     ,adios_real = 5                 \/\/ (4)$/;"	e	enum:ADIOS_DATATYPES
adios_select_method	adios.c	/^int adios_select_method (int priority, const char * method$/;"	f
adios_select_method_	adios.c	/^void adios_select_method_ (int * priority, const char * method$/;"	f
adios_set_buffer_size	adios_internals.c	/^int adios_set_buffer_size ()$/;"	f
adios_set_path	adios.c	/^int adios_set_path (int64_t fd_p, const char * path)$/;"	f
adios_set_path_	adios.c	/^void adios_set_path_ (int64_t * fd_p, const char * path, int * err$/;"	f
adios_set_path_var	adios.c	/^int adios_set_path_var (int64_t fd_p, const char * path, const char * name)$/;"	f
adios_set_path_var_	adios.c	/^void adios_set_path_var_ (int64_t * fd_p, const char * path$/;"	f
adios_set_socket_address	adios_socket.c	/^int adios_set_socket_address(char *hostname,int port,struct sockaddr_in *address)$/;"	f
adios_shared_buffer_free	adios_bp_v1.c	/^void adios_shared_buffer_free (struct adios_bp_buffer_struct_v1 * b)$/;"	f
adios_short	adios_types.h	/^                     ,adios_short = 1                \/\/ (2)$/;"	e	enum:ADIOS_DATATYPES
adios_should_buffer_fn	adios_internals.h	/^    ADIOS_SHOULD_BUFFER_FN adios_should_buffer_fn;$/;"	m	struct:adios_transport_struct
adios_socket_accept	adios_socket.c	/^int adios_socket_accept(int socketid,int *connected)$/;"	f
adios_socket_start_listen	adios_socket.c	/^int adios_socket_start_listen(int socketid)$/;"	f
adios_start_calculation	adios.c	/^int adios_start_calculation ()$/;"	f
adios_start_calculation_	adios.c	/^void adios_start_calculation_ (int * err)$/;"	f
adios_start_calculation_fn	adios_internals.h	/^    ADIOS_START_CALCULATION_FN adios_start_calculation_fn;$/;"	m	struct:adios_transport_struct
adios_stop_calculation	adios.c	/^int adios_stop_calculation ()$/;"	f
adios_stop_calculation_	adios.c	/^void adios_stop_calculation_ (int * err)$/;"	f
adios_stop_calculation_fn	adios_internals.h	/^    ADIOS_STOP_CALCULATION_FN adios_stop_calculation_fn;$/;"	m	struct:adios_transport_struct
adios_string	adios_types.h	/^                     ,adios_string = 9               \/\/ (?)$/;"	e	enum:ADIOS_DATATYPES
adios_stripe_size_aligned	adios_internals.c	/^int adios_stripe_size_aligned()$/;"	f
adios_transport_struct	adios_internals.h	/^struct adios_transport_struct$/;"	s
adios_transports	adios_internals.c	/^struct adios_transport_struct * adios_transports = 0;$/;"	v
adios_transports_initialized	adios_internals.c	/^static int adios_transports_initialized = 0;$/;"	v	file:
adios_type_to_string	adios_internals.c	/^const char * adios_type_to_string (int type)$/;"	f
adios_unknown	adios_types.h	/^enum ADIOS_DATATYPES {adios_unknown = -1             \/\/ (size)$/;"	e	enum:ADIOS_DATATYPES
adios_unsigned_byte	adios_types.h	/^                     ,adios_unsigned_byte = 50       \/\/ (1)$/;"	e	enum:ADIOS_DATATYPES
adios_unsigned_integer	adios_types.h	/^                     ,adios_unsigned_integer = 52    \/\/ (4)$/;"	e	enum:ADIOS_DATATYPES
adios_unsigned_long	adios_types.h	/^                     ,adios_unsigned_long = 54       \/\/ (8)$/;"	e	enum:ADIOS_DATATYPES
adios_unsigned_short	adios_types.h	/^                     ,adios_unsigned_short = 51      \/\/ (2)$/;"	e	enum:ADIOS_DATATYPES
adios_var_header_struct_v1	adios_bp_v1.h	/^struct adios_var_header_struct_v1$/;"	s
adios_var_payload_struct_v1	adios_bp_v1.h	/^struct adios_var_payload_struct_v1$/;"	s
adios_var_struct	adios_internals.h	/^struct adios_var_struct$/;"	s
adios_var_to_comm	adios_mpi.c	/^static void adios_var_to_comm (const char * comm_name$/;"	f	file:
adios_var_to_comm	adios_mpi_cio.c	/^static void adios_var_to_comm (const char * varname$/;"	f	file:
adios_var_to_comm	adios_mpi_nwu.c	/^static void adios_var_to_comm (const char * comm_name$/;"	f	file:
adios_var_to_comm_phdf5	adios_phdf5.c	/^static void adios_var_to_comm_phdf5 (enum ADIOS_FLAG host_language_fortran$/;"	f	file:
adios_vars_header_struct_v1	adios_bp_v1.h	/^struct adios_vars_header_struct_v1$/;"	s
adios_vtk_close	adios_vtk.c	/^void adios_vtk_close (struct adios_file_struct * fd$/;"	f
adios_vtk_end_iteration	adios_vtk.c	/^void adios_vtk_end_iteration (struct adios_method_struct * method)$/;"	f
adios_vtk_finalize	adios_vtk.c	/^void adios_vtk_finalize (int mype, struct adios_method_struct * method)$/;"	f
adios_vtk_get_write_buffer	adios_vtk.c	/^void adios_vtk_get_write_buffer (struct adios_file_struct * fd$/;"	f
adios_vtk_init	adios_vtk.c	/^void adios_vtk_init (const char * parameters$/;"	f
adios_vtk_initialized	adios_vtk.c	/^static int adios_vtk_initialized = 0;$/;"	v	file:
adios_vtk_open	adios_vtk.c	/^int adios_vtk_open (struct adios_file_struct * fd$/;"	f
adios_vtk_read	adios_vtk.c	/^void adios_vtk_read (struct adios_file_struct * fd$/;"	f
adios_vtk_should_buffer	adios_vtk.c	/^enum ADIOS_FLAG adios_vtk_should_buffer (struct adios_file_struct * fd$/;"	f
adios_vtk_start_calculation	adios_vtk.c	/^void adios_vtk_start_calculation (struct adios_method_struct * method)$/;"	f
adios_vtk_stop_calculation	adios_vtk.c	/^void adios_vtk_stop_calculation (struct adios_method_struct * method)$/;"	f
adios_vtk_write	adios_vtk.c	/^void adios_vtk_write (struct adios_file_struct * fd$/;"	f
adios_write	adios.c	/^int adios_write (int64_t fd_p, const char * name, void * var)$/;"	f
adios_write_	adios.c	/^void adios_write_ (int64_t * fd_p, const char * name, void * var, int * err$/;"	f
adios_write_attribute_v1	adios_internals.c	/^int adios_write_attribute_v1 (struct adios_file_struct * fd$/;"	f
adios_write_close_attributes_v1	adios_internals.c	/^int adios_write_close_attributes_v1 (struct adios_file_struct * fd)$/;"	f
adios_write_close_vars_v1	adios_internals.c	/^int adios_write_close_vars_v1 (struct adios_file_struct * fd)$/;"	f
adios_write_dimension_v1	adios_internals.c	/^uint64_t adios_write_dimension_v1 (struct adios_file_struct * fd$/;"	f	file:
adios_write_dimensions_v1	adios_internals.c	/^uint16_t adios_write_dimensions_v1 (struct adios_file_struct * fd$/;"	f	file:
adios_write_fn	adios_internals.h	/^    ADIOS_WRITE_FN adios_write_fn;$/;"	m	struct:adios_transport_struct
adios_write_index_v1	adios_internals.c	/^int adios_write_index_v1 (char ** buffer$/;"	f
adios_write_open_attributes_v1	adios_internals.c	/^int adios_write_open_attributes_v1 (struct adios_file_struct * fd)$/;"	f
adios_write_open_vars_v1	adios_internals.c	/^int adios_write_open_vars_v1 (struct adios_file_struct * fd)$/;"	f
adios_write_process_group_header_v1	adios_internals.c	/^int adios_write_process_group_header_v1 (struct adios_file_struct * fd$/;"	f
adios_write_var_characteristics_dims_v1	adios_internals.c	/^uint16_t adios_write_var_characteristics_dims_v1 (struct adios_file_struct * fd$/;"	f
adios_write_var_characteristics_v1	adios_internals.c	/^uint16_t adios_write_var_characteristics_v1 (struct adios_file_struct * fd$/;"	f
adios_write_var_header_v1	adios_internals.c	/^uint64_t adios_write_var_header_v1 (struct adios_file_struct * fd$/;"	f
adios_write_var_payload_v1	adios_internals.c	/^int adios_write_var_payload_v1 (struct adios_file_struct * fd$/;"	f
adios_write_version_v1	adios_internals.c	/^int adios_write_version_v1 (char ** buffer$/;"	f
all_unique_var_names	adios_internals.h	/^    enum ADIOS_FLAG all_unique_var_names;$/;"	m	struct:adios_group_struct
all_unique_var_names	adios_internals.h	/^    enum ADIOS_FLAG all_unique_var_names;$/;"	m	struct:adios_parse_buffer_struct
alloc_aligned	adios_bp_v1.c	/^static void alloc_aligned (struct adios_bp_buffer_struct_v1 * b, uint64_t size)$/;"	f	file:
allocated_buff_ptr	adios_bp_v1.h	/^    char * allocated_buff_ptr;  \/\/ initial alloc for aligning on 8-byte boundary$/;"	m	struct:adios_bp_buffer_struct_v1
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/config\/ac_gengetopt.m4 \\$/;"	m
am__append_1	Makefile	/^am__append_1 = libadios_phdf5.a$/;"	m
am__append_2	Makefile	/^am__append_2 = -DPHDF5 -DH5_USE_16_API $/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe =$/;"	m
am__fastdepCC_FALSE	Makefile	/^am__fastdepCC_FALSE = $/;"	m
am__fastdepCC_TRUE	Makefile	/^am__fastdepCC_TRUE = #$/;"	m
am__fastdepCXX_FALSE	Makefile	/^am__fastdepCXX_FALSE = $/;"	m
am__fastdepCXX_TRUE	Makefile	/^am__fastdepCXX_TRUE = #$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__libadios_a_SOURCES_DIST	Makefile	/^am__libadios_a_SOURCES_DIST = adios.c adios_transport_hooks.c \\$/;"	m
am__libadios_phdf5_a_SOURCES_DIST	Makefile	/^am__libadios_phdf5_a_SOURCES_DIST = adios_phdf5.c$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__strip_dir	Makefile	/^am__strip_dir = `echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tar	Makefile	/^am__tar = ${AMTAR} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = ${AMTAR} xf -$/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_libadios_a_OBJECTS	Makefile	/^am_libadios_a_OBJECTS = libadios_a-adios.$(OBJEXT) \\$/;"	m
am_libadios_int_a_OBJECTS	Makefile	/^am_libadios_int_a_OBJECTS = libadios_int_a-adios_internals.$(OBJEXT) \\$/;"	m
am_libadios_phdf5_a_OBJECTS	Makefile	/^am_libadios_phdf5_a_OBJECTS =  \\$/;"	m
another_method	adios_provenance.c	/^    enum   ADIOS_IO_METHOD another_method;  \/\/ the other method in case of multiple methods$/;"	m	struct:adios_PROVENANCE_data_struct	file:
attr_name	adios_bp_v1.h	/^    char * attr_name;$/;"	m	struct:adios_index_attribute_struct_v1
attr_path	adios_bp_v1.h	/^    char * attr_path;$/;"	m	struct:adios_index_attribute_struct_v1
attributes	adios_internals.h	/^    struct adios_attribute_struct * attributes;$/;"	m	struct:adios_group_struct
attrs_index_offset	adios_bp_v1.h	/^    uint64_t attrs_index_offset;  \/\/ attributes index start$/;"	m	struct:adios_bp_buffer_struct_v1
attrs_size	adios_bp_v1.h	/^    uint64_t attrs_size;          \/\/ attributes index size$/;"	m	struct:adios_bp_buffer_struct_v1
b	adios_mpi.c	/^    struct adios_bp_buffer_struct_v1 b;$/;"	m	struct:adios_MPI_data_struct	file:
b	adios_mpi_nwu.c	/^    struct adios_bp_buffer_struct_v1 b;$/;"	m	struct:adios_MPI_data_struct	file:
b	adios_posix.c	/^    struct adios_bp_buffer_struct_v1 b;$/;"	m	struct:adios_POSIX_data_struct	file:
b	adios_provenance.c	/^    struct adios_bp_buffer_struct_v1 b;$/;"	m	struct:adios_PROVENANCE_data_struct	file:
base_offset	adios_internals.h	/^    uint64_t base_offset;   \/\/ where writing last ocurred$/;"	m	struct:adios_file_struct
base_offset	adios_mpi_cio.c	/^    uint64_t base_offset;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
base_path	adios_internals.h	/^    char * base_path;$/;"	m	struct:adios_method_struct
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
buff	adios_bp_v1.h	/^    char * buff;$/;"	m	struct:adios_bp_buffer_struct_v1
buffer	adios_datatap.c	/^    unsigned char * buffer;$/;"	m	struct:fm_structure	file:
buffer	adios_internals.h	/^    char * buffer;          \/\/ buffer we use for building the output$/;"	m	struct:adios_file_struct
buffer	adios_internals.h	/^    void * buffer;$/;"	m	struct:adios_buffer_part_entry
buffer	adios_internals.h	/^    void * buffer;$/;"	m	struct:adios_parse_buffer_struct
buffer	adios_mpi.c	/^    char*  	buffer;$/;"	m	struct:adios_MPI_write_buffer	file:
buffer	adios_mpi_cio.c	/^    void * buffer;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
buffer_len	adios_internals.h	/^    uint64_t buffer_len;$/;"	m	struct:adios_parse_buffer_struct
buffer_offset	adios_mpi.c	/^    uint64_t 	buffer_offset;$/;"	m	struct:adios_MPI_write_buffer	file:
buffer_size	adios_internals.h	/^    size_t buffer_size;$/;"	m	struct:adios_buffer_part_entry
buffer_size	adios_internals.h	/^    uint64_t buffer_size;   \/\/ how big the buffer is currently$/;"	m	struct:adios_file_struct
buffer_size	adios_mpi.c	/^    int    	buffer_size;$/;"	m	struct:adios_MPI_write_buffer	file:
buffer_size	adios_mpi_cio.c	/^    uint64_t buffer_size;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
buffer_write	adios_internals.c	/^static void buffer_write (char ** buffer, uint64_t * buffer_size$/;"	f	file:
build	Makefile	/^build = powerpc64-unknown-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = powerpc64$/;"	m
build_offsets	adios_mpi.c	/^void build_offsets (struct adios_bp_buffer_struct_v1 * b$/;"	f	file:
build_offsets	adios_mpi_nwu.c	/^void build_offsets (struct adios_bp_buffer_struct_v1 * b$/;"	f	file:
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = powerpc64-unknown-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
bytes_written	adios_internals.h	/^    uint64_t bytes_written; \/\/ largest offset into buffer written to$/;"	m	struct:adios_file_struct
calc_dimension_size	adios_internals.c	/^static uint16_t calc_dimension_size (struct adios_dimension_struct * dimension)$/;"	f	file:
calc_dimensions_size	adios_internals.c	/^static uint16_t calc_dimensions_size (struct adios_dimension_struct * dimension)$/;"	f	file:
cast_var_data_as_uint64	adios_internals.c	/^static uint64_t cast_var_data_as_uint64 (const char * parent_name$/;"	f	file:
cell_list	adios_internals.h	/^    struct adios_mesh_cell_list_list_struct * cell_list;$/;"	m	struct:adios_mesh_unstructured_struct
cell_list	adios_internals.h	/^    struct adios_mesh_cell_list_struct cell_list;$/;"	m	struct:adios_mesh_cell_list_list_struct
cells_uniform	adios_internals.h	/^    enum ADIOS_FLAG cells_uniform;$/;"	m	struct:adios_mesh_cell_list_struct
change_endianness	adios_bp_v1.h	/^    enum ADIOS_FLAG change_endianness;$/;"	m	struct:adios_bp_buffer_struct_v1
characteristics	adios_bp_v1.h	/^    struct adios_index_characteristic_struct_v1 * characteristics;$/;"	m	struct:adios_index_attribute_struct_v1
characteristics	adios_bp_v1.h	/^    struct adios_index_characteristic_struct_v1 * characteristics;$/;"	m	struct:adios_index_var_struct_v1
characteristics	adios_bp_v1.h	/^    struct adios_index_characteristic_struct_v1 characteristics;$/;"	m	struct:adios_var_header_struct_v1
characteristics_allocated	adios_bp_v1.h	/^    uint64_t characteristics_allocated;$/;"	m	struct:adios_index_attribute_struct_v1
characteristics_allocated	adios_bp_v1.h	/^    uint64_t characteristics_allocated;$/;"	m	struct:adios_index_var_struct_v1
characteristics_count	adios_bp_v1.h	/^    uint64_t characteristics_count;$/;"	m	struct:adios_index_attribute_struct_v1
characteristics_count	adios_bp_v1.h	/^    uint64_t characteristics_count;$/;"	m	struct:adios_index_var_struct_v1
cleanup_dimensions	adios_internals.c	/^static void cleanup_dimensions (char *** tokens, int * count)$/;"	f	file:
common_adios_allocate_buffer	adios.c	/^static int common_adios_allocate_buffer ()$/;"	f	file:
common_adios_close	adios.c	/^static int common_adios_close (int64_t fd_p)$/;"	f	file:
common_adios_end_iteration	adios.c	/^static int common_adios_end_iteration ()$/;"	f	file:
common_adios_finalize	adios.c	/^static int common_adios_finalize (int mype)$/;"	f	file:
common_adios_get_write_buffer	adios.c	/^static int common_adios_get_write_buffer (int64_t fd_p, const char * name$/;"	f	file:
common_adios_group_size	adios.c	/^static int common_adios_group_size (int64_t fd_p$/;"	f	file:
common_adios_init	adios.c	/^static int common_adios_init (const char * config)$/;"	f	file:
common_adios_open	adios.c	/^static int common_adios_open (int64_t * fd, const char * group_name$/;"	f	file:
common_adios_read	adios.c	/^static int common_adios_read (int64_t fd_p, const char * name, void * buffer$/;"	f	file:
common_adios_set_path	adios.c	/^static int common_adios_set_path (int64_t fd_p, const char * path)$/;"	f	file:
common_adios_set_path_var	adios.c	/^static int common_adios_set_path_var (int64_t fd_p, const char * path$/;"	f	file:
common_adios_start_calculation	adios.c	/^static int common_adios_start_calculation ()$/;"	f	file:
common_adios_stop_calculation	adios.c	/^static int common_adios_stop_calculation ()$/;"	f	file:
common_adios_write	adios.c	/^static int common_adios_write (int64_t fd_p, const char * name, void * var)$/;"	f	file:
components	adios_internals.h	/^    struct adios_mesh_item_struct * components;$/;"	m	struct:adios_mesh_unstructured_struct
coord_var_id	adios_bp_v1.h	/^    uint16_t coord_var_id;$/;"	m	struct:adios_process_group_header_struct_v1
coordinates	adios_internals.h	/^    struct adios_mesh_var_list_struct * coordinates;$/;"	m	struct:adios_mesh_rectilinear_struct
coordinates_single_var	adios_internals.h	/^    enum ADIOS_FLAG coordinates_single_var;$/;"	m	struct:adios_mesh_rectilinear_struct
count	adios_bp_v1.h	/^    uint16_t count;$/;"	m	struct:adios_attributes_header_struct_v1
count	adios_bp_v1.h	/^    uint32_t count;$/;"	m	struct:adios_vars_header_struct_v1
count	adios_bp_v1.h	/^    uint8_t count;$/;"	m	struct:adios_index_characteristic_dims_struct_v1
count	adios_internals.h	/^    struct adios_mesh_item_struct count;$/;"	m	struct:adios_mesh_cell_list_struct
count_dimensions	adios_internals.c	/^static uint8_t count_dimensions (struct adios_dimension_struct * dimensions)$/;"	f	file:
cycle_id	adios_datatap.c	/^    int cycle_id;$/;"	m	struct:datatap_method_data	file:
data	adios_internals.h	/^    struct adios_var_struct * data;$/;"	m	struct:adios_mesh_cell_list_struct
data	adios_internals.h	/^    void * data;                  \/\/ primarily used for reading$/;"	m	struct:adios_var_struct
data_size	adios_internals.h	/^    uint64_t data_size;           \/\/ primarily used for reading$/;"	m	struct:adios_var_struct
data_size	adios_internals.h	/^    uint64_t data_size;$/;"	m	struct:adios_file_struct
datadir	Makefile	/^datadir = ${prefix}\/share$/;"	m
datatap_method_data	adios_datatap.c	/^typedef struct datatap_method_data$/;"	s	file:
depcomp	Makefile	/^depcomp =$/;"	m
depmode	Makefile	/^CCDEPMODE = depmode=none$/;"	m
depmode	Makefile	/^CXXDEPMODE = depmode=none$/;"	m
dimension	adios_bp_v1.h	/^    struct adios_dimension_item_struct_v1 dimension;$/;"	m	struct:adios_dimension_struct_v1
dimension	adios_internals.h	/^    struct adios_dimension_item_struct dimension;$/;"	m	struct:adios_dimension_struct
dimensions	adios_internals.h	/^    struct adios_dimension_struct * dimensions;$/;"	m	struct:adios_var_struct
dimensions	adios_internals.h	/^    struct adios_mesh_item_list_struct * dimensions;$/;"	m	struct:adios_mesh_rectilinear_struct
dimensions	adios_internals.h	/^    struct adios_mesh_item_list_struct * dimensions;$/;"	m	struct:adios_mesh_structured_struct
dimensions	adios_internals.h	/^    struct adios_mesh_item_list_struct * dimensions;$/;"	m	struct:adios_mesh_uniform_struct
dims	adios_bp_v1.h	/^    struct adios_dimension_struct_v1 * dims;$/;"	m	struct:adios_var_header_struct_v1
dims	adios_bp_v1.h	/^    struct adios_index_characteristic_dims_struct_v1 dims;$/;"	m	struct:adios_index_characteristic_struct_v1
dims	adios_bp_v1.h	/^    uint64_t * dims;  \/\/ each 3 uint64_t represents one dimension (l, g, o)$/;"	m	struct:adios_index_characteristic_dims_struct_v1
dir	Makefile	/^	    dir="\/$$dir"; \\$/;"	m
dir	Makefile	/^	    dir=''; \\$/;"	m
dir	Makefile	/^	  dir=`echo "$$file" | sed -e 's,\/[^\/]*$$,,'`; \\$/;"	m
dmd	adios_datatap.c	/^}dmd;$/;"	t	file:
dxpl_id	adios_phdf5.c	/^  hid_t dxpl_id;$/;"	m	struct:adios_phdf5_data_struct	file:
end_of_pgs	adios_bp_v1.h	/^    uint64_t end_of_pgs;          \/\/ where the last process group ends$/;"	m	struct:adios_bp_buffer_struct_v1
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
f	Makefile	/^	    f=$(am__strip_dir) \\$/;"	m
f	Makefile	/^	  f=$(am__strip_dir) \\$/;"	m
f	Makefile	/^    $(srcdir)\/*) f=`echo "$$p" | sed "s|^$$srcdirstrip\/||"`;; \\$/;"	m
f	Makefile	/^    *) f=$$p;; \\$/;"	m
f	adios_bp_v1.h	/^    int f;             \/\/ the file handle$/;"	m	struct:adios_bp_buffer_struct_v1
fh	adios_mpi.c	/^    MPI_File fh;$/;"	m	struct:adios_MPI_data_struct	file:
fh	adios_mpi_cio.c	/^    MPI_File fh;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
fh	adios_mpi_nwu.c	/^    MPI_File fh;$/;"	m	struct:adios_MPI_data_struct	file:
fh	adios_phdf5.c	/^  hid_t fh;$/;"	m	struct:adios_phdf5_data_struct	file:
file	Makefile	/^	    $(srcdir)\/*) file=`echo "$$file" | sed "s|^$$srcdirstrip\/||"`;; \\$/;"	m
file	Makefile	/^	    $(top_srcdir)\/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip\/|$(top_builddir)\/|"`;; \\$/;"	m
file_offset	adios_bp_v1.h	/^    off_t file_offset;$/;"	m	struct:adios_bp_buffer_struct_v1
file_offset	adios_mpi.c	/^    uint64_t 	file_offset;$/;"	m	struct:adios_MPI_write_buffer	file:
file_size	adios_bp_v1.h	/^    uint64_t file_size;$/;"	m	struct:adios_bp_buffer_struct_v1
findFixedName	adios_datatap.c	/^static char *findFixedName(struct fm_structure *fm, char *name)$/;"	f	file:
fm	adios_datatap.c	/^    struct fm_structure *fm;$/;"	m	struct:datatap_method_data	file:
fm_structure	adios_datatap.c	/^struct fm_structure$/;"	s	file:
format	adios_datatap.c	/^    FMFormatRec *format;$/;"	m	struct:fm_structure	file:
free_data	adios_internals.h	/^    enum ADIOS_FLAG free_data;    \/\/ primarily used for writing$/;"	m	struct:adios_var_struct
getFixedName	adios_datatap.c	/^static char * getFixedName(char *name)$/;"	f	file:
getH5TypeId	adios_phdf5.c	/^int getH5TypeId(enum ADIOS_DATATYPES type, hid_t* h5_type_id \\$/;"	f
get_value_for_dim	adios_internals.c	/^static uint64_t get_value_for_dim (struct adios_file_struct * fd$/;"	f	file:
global_dimension	adios_bp_v1.h	/^    struct adios_dimension_item_struct_v1 global_dimension;$/;"	m	struct:adios_dimension_struct_v1
global_dimension	adios_internals.h	/^    struct adios_dimension_item_struct global_dimension;$/;"	m	struct:adios_dimension_struct
got_buffer	adios_internals.h	/^    enum ADIOS_FLAG got_buffer;$/;"	m	struct:adios_var_struct
group	adios_internals.h	/^    struct adios_group_struct * group;$/;"	m	struct:adios_file_struct
group	adios_internals.h	/^    struct adios_group_struct * group;$/;"	m	struct:adios_group_list_struct
group	adios_internals.h	/^    struct adios_group_struct * group;$/;"	m	struct:adios_method_struct
group_by	adios_internals.h	/^    char * group_by;$/;"	m	struct:adios_group_struct
group_comm	adios_internals.h	/^    char * group_comm;$/;"	m	struct:adios_group_struct
group_comm	adios_mpi.c	/^    MPI_Comm group_comm;$/;"	m	struct:adios_MPI_data_struct	file:
group_comm	adios_mpi_nwu.c	/^    MPI_Comm group_comm;$/;"	m	struct:adios_MPI_data_struct	file:
group_comm	adios_phdf5.c	/^  MPI_Comm group_comm;$/;"	m	struct:adios_phdf5_data_struct	file:
group_comm	adios_provenance.c	/^    MPI_Comm group_comm; \/\/ communication for this group$/;"	m	struct:adios_PROVENANCE_data_struct	file:
group_name	adios_bp_v1.h	/^    char * group_name;$/;"	m	struct:adios_index_attribute_struct_v1
group_name	adios_bp_v1.h	/^    char * group_name;$/;"	m	struct:adios_index_process_group_struct_v1
group_name	adios_bp_v1.h	/^    char * group_name;$/;"	m	struct:adios_index_var_struct_v1
group_offset	adios_internals.h	/^    uint64_t group_offset;$/;"	m	struct:adios_group_struct
here	Makefile	/^	here=`$(am__cd) $(top_builddir) && pwd` \\$/;"	m
here	Makefile	/^	here=`pwd`; \\$/;"	m
host	Makefile	/^host = powerpc64-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = powerpc64$/;"	m
host_language_fortran	adios_bp_v1.h	/^    enum ADIOS_FLAG host_language_fortran;$/;"	m	struct:adios_process_group_header_struct_v1
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = powerpc64-unknown-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
hr_var	adios_phdf5.c	/^int hr_var (hid_t root_id$/;"	f
hw_attribute	adios_phdf5.c	/^int hw_attribute ( hid_t root_id$/;"	f
hw_gclose	adios_phdf5.c	/^void hw_gclose (hid_t * grp_id, int level, enum ADIOS_FLAG flag) {$/;"	f
hw_gopen	adios_phdf5.c	/^void hw_gopen (hid_t root_id, char * path, hid_t * grp_id, int * level, enum ADIOS_FLAG flag) {$/;"	f
hw_var	adios_phdf5.c	/^int hw_var (hid_t root_id$/;"	f
id	adios_bp_v1.h	/^    enum ADIOS_IO_METHOD id;$/;"	m	struct:adios_method_info_struct_v1
id	adios_bp_v1.h	/^    uint16_t id;$/;"	m	struct:adios_attribute_struct_v1
id	adios_bp_v1.h	/^    uint16_t id;$/;"	m	struct:adios_index_attribute_struct_v1
id	adios_bp_v1.h	/^    uint16_t id;$/;"	m	struct:adios_index_var_struct_v1
id	adios_bp_v1.h	/^    uint16_t id;$/;"	m	struct:adios_var_header_struct_v1
id	adios_internals.h	/^    uint16_t id;$/;"	m	struct:adios_attribute_struct
id	adios_internals.h	/^    uint16_t id;$/;"	m	struct:adios_dimension_item_struct
id	adios_internals.h	/^    uint16_t id;$/;"	m	struct:adios_group_struct
id	adios_internals.h	/^    uint16_t id;$/;"	m	struct:adios_var_struct
includeHEADERS_INSTALL	Makefile	/^includeHEADERS_INSTALL = $(INSTALL_HEADER)$/;"	m
include_HEADERS	Makefile	/^include_HEADERS = adios.h adios_types.h adios_internals.h \\$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
index_append_attribute_v1	adios_internals.c	/^static void index_append_attribute_v1$/;"	f	file:
index_append_process_group_v1	adios_internals.c	/^static void index_append_process_group_v1 ($/;"	f	file:
index_append_var_v1	adios_internals.c	/^static void index_append_var_v1 (struct adios_index_var_struct_v1 ** root$/;"	f	file:
infodir	Makefile	/^infodir = ${prefix}\/info$/;"	m
initialized	adios_datatap.c	/^    int initialized;	$/;"	m	struct:datatap_method_data	file:
initialized	adios_datatap.c	/^int initialized = 0;$/;"	v
install_sh	Makefile	/^install_sh = \/gpfs\/fs0\/cgj\/adios.svn\/trunk\/config\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
internal_adios_datatap_write	adios_datatap.c	/^void internal_adios_datatap_write (struct adios_file_struct * fd, struct adios_method_struct *method)$/;"	f
internal_find_field	adios_datatap.c	/^static FMField* internal_find_field(char *name, FMFieldList flist)$/;"	f	file:
ioarr	adios_dart.c	/^    struct iovec ioarr;$/;"	m	struct:adios_DART_data_struct	file:
ioformat	adios_datatap.c	/^    FMFormat ioformat;$/;"	m	struct:fm_structure	file:
is_dim	adios_bp_v1.h	/^    enum ADIOS_FLAG is_dim;$/;"	m	struct:adios_var_header_struct_v1
is_dim	adios_internals.h	/^    enum ADIOS_FLAG is_dim;   \/\/ if it is a dimension, we need to$/;"	m	struct:adios_var_struct
is_num	adios_internals.c	/^static int is_num (char * temp) \/\/ 1 == yes, 0 == no$/;"	f	file:
is_var	adios_bp_v1.h	/^    enum ADIOS_FLAG is_var;$/;"	m	struct:adios_attribute_struct_v1
is_var	adios_internals.c	/^static int is_var (const char * temp) \/\/ 1 == yes, 0 == no$/;"	f	file:
item	adios_internals.h	/^    struct adios_mesh_item_struct item;$/;"	m	struct:adios_mesh_item_list_struct
iterations	adios_internals.h	/^    int iterations;$/;"	m	struct:adios_method_struct
l_object_gr	adios_mpi.c	/^        uint64_t l_object_gr;        \/* OST object group (creating MDS number) *\/$/;"	m	struct:lov_user_ost_data	file:
l_object_id	adios_mpi.c	/^        uint64_t l_object_id;        \/* OST object ID *\/$/;"	m	struct:lov_user_ost_data	file:
l_ost_gen	adios_mpi.c	/^        uint32_t l_ost_gen;          \/* generation of this OST index *\/$/;"	m	struct:lov_user_ost_data	file:
l_ost_idx	adios_mpi.c	/^        uint32_t l_ost_idx;          \/* OST index in LOV *\/$/;"	m	struct:lov_user_ost_data	file:
last_var_write_yes	adios_mpi_cio.c	/^    int last_var_write_yes; \/\/ was the last item asked to write a write="yes"?$/;"	m	struct:adios_MPI_Collective_data_struct	file:
length	adios_bp_v1.h	/^    uint32_t length;$/;"	m	struct:adios_attribute_struct_v1
length	adios_bp_v1.h	/^    uint64_t length;$/;"	m	struct:adios_attributes_header_struct_v1
length	adios_bp_v1.h	/^    uint64_t length;$/;"	m	struct:adios_bp_buffer_struct_v1
length	adios_bp_v1.h	/^    uint64_t length;$/;"	m	struct:adios_vars_header_struct_v1
libLIBRARIES_INSTALL	Makefile	/^libLIBRARIES_INSTALL = $(INSTALL_DATA)$/;"	m
lib_LIBRARIES	Makefile	/^lib_LIBRARIES = libadios.a $(am__append_1) libadios_int.a$/;"	m
libadios_a_AR	Makefile	/^libadios_a_AR = $(AR) $(ARFLAGS)$/;"	m
libadios_a_CPPFLAGS	Makefile	/^libadios_a_CPPFLAGS = $(MXML_CPPFLAGS)  $(PHDF5_CPPFLAGS)$/;"	m
libadios_a_LIBADD	Makefile	/^libadios_a_LIBADD =$/;"	m
libadios_a_OBJECTS	Makefile	/^libadios_a_OBJECTS = $(am_libadios_a_OBJECTS)$/;"	m
libadios_a_SOURCES	Makefile	/^libadios_a_SOURCES = adios.c adios_transport_hooks.c adios_mpi.c \\$/;"	m
libadios_int_a_AR	Makefile	/^libadios_int_a_AR = $(AR) $(ARFLAGS)$/;"	m
libadios_int_a_CPPFLAGS	Makefile	/^libadios_int_a_CPPFLAGS = $(MXML_CPPFLAGS)$/;"	m
libadios_int_a_LIBADD	Makefile	/^libadios_int_a_LIBADD =$/;"	m
libadios_int_a_OBJECTS	Makefile	/^libadios_int_a_OBJECTS = $(am_libadios_int_a_OBJECTS)$/;"	m
libadios_int_a_SOURCES	Makefile	/^libadios_int_a_SOURCES = adios_internals.c \\$/;"	m
libadios_phdf5_a_AR	Makefile	/^libadios_phdf5_a_AR = $(AR) $(ARFLAGS)$/;"	m
libadios_phdf5_a_CPPFLAGS	Makefile	/^libadios_phdf5_a_CPPFLAGS = $(MXML_CPPFLAGS)  $(PHDF5_CPPFLAGS)$/;"	m
libadios_phdf5_a_LIBADD	Makefile	/^libadios_phdf5_a_LIBADD =$/;"	m
libadios_phdf5_a_OBJECTS	Makefile	/^libadios_phdf5_a_OBJECTS = $(am_libadios_phdf5_a_OBJECTS)$/;"	m
libadios_phdf5_a_SOURCES	Makefile	/^libadios_phdf5_a_SOURCES = adios_phdf5.c$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
list	Makefile	/^	list='$(DISTFILES)'; for file in $$list; do \\$/;"	m
list	Makefile	/^	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\$/;"	m
list	Makefile	/^	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\$/;"	m
lmm_magic	adios_mpi.c	/^        uint32_t lmm_magic;          \/* magic number = LOV_USER_MAGIC_V1 *\/$/;"	m	struct:lov_user_md	file:
lmm_object_gr	adios_mpi.c	/^        uint64_t lmm_object_gr;      \/* LOV object group *\/$/;"	m	struct:lov_user_md	file:
lmm_object_id	adios_mpi.c	/^        uint64_t lmm_object_id;      \/* LOV object ID *\/$/;"	m	struct:lov_user_md	file:
lmm_objects	adios_mpi.c	/^        struct lov_user_ost_data  lmm_objects[0]; \/* per-stripe data *\/$/;"	m	struct:lov_user_md	file:
lmm_pattern	adios_mpi.c	/^        uint32_t lmm_pattern;        \/* LOV_PATTERN_RAID0, LOV_PATTERN_RAID1 *\/$/;"	m	struct:lov_user_md	file:
lmm_stripe_count	adios_mpi.c	/^        uint16_t lmm_stripe_count;   \/* num stripes in use for this object *\/$/;"	m	struct:lov_user_md	file:
lmm_stripe_offset	adios_mpi.c	/^        uint16_t lmm_stripe_offset;  \/* starting stripe offset in lmm_objects *\/$/;"	m	struct:lov_user_md	file:
lmm_stripe_size	adios_mpi.c	/^        uint32_t lmm_stripe_size;    \/* size of stripe in bytes *\/$/;"	m	struct:lov_user_md	file:
local_offset	adios_bp_v1.h	/^    struct adios_dimension_item_struct_v1 local_offset;$/;"	m	struct:adios_dimension_struct_v1
local_offset	adios_internals.h	/^    struct adios_dimension_item_struct local_offset;$/;"	m	struct:adios_dimension_struct
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lov_user_md	adios_mpi.c	/^struct lov_user_md {           \/* LOV EA user data (host-endian) *\/$/;"	s	file:
lov_user_ost_data	adios_mpi.c	/^struct lov_user_ost_data {     \/* per-stripe data structure *\/$/;"	s	file:
m	adios_internals.h	/^    enum ADIOS_IO_METHOD m;$/;"	m	struct:adios_method_struct
mandir	Makefile	/^mandir = ${prefix}\/man$/;"	m
mangledname	adios_datatap.c	/^    char *mangledname;$/;"	m	struct:nametable_	file:
max	adios_bp_v1.h	/^    void * max;$/;"	m	struct:adios_index_characteristic_struct_v1
max	adios_internals.h	/^    void * max;             \/\/ maximum value                   [for writes]$/;"	m	struct:adios_var_struct
member_count	adios_internals.h	/^    uint16_t member_count;$/;"	m	struct:adios_group_struct
mesh	adios_internals.h	/^    struct adios_mesh_struct * mesh;$/;"	m	struct:adios_group_struct
method	adios_internals.h	/^    char * method;$/;"	m	struct:adios_method_struct
method	adios_internals.h	/^    struct adios_method_struct * method;$/;"	m	struct:adios_method_list_struct
method_data	adios_internals.h	/^    void * method_data;$/;"	m	struct:adios_method_struct
methods	adios_bp_v1.h	/^    struct adios_method_info_struct_v1 * methods;$/;"	m	struct:adios_process_group_header_struct_v1
methods	adios_internals.h	/^    struct adios_method_list_struct * methods;$/;"	m	struct:adios_group_struct
methods_count	adios_bp_v1.h	/^    uint8_t methods_count;$/;"	m	struct:adios_process_group_header_struct_v1
min	adios_bp_v1.h	/^    void * min;$/;"	m	struct:adios_index_characteristic_struct_v1
min	adios_internals.h	/^    void * min;             \/\/ minimum value                   [for writes]$/;"	m	struct:adios_var_struct
mkdir_p	Makefile	/^mkdir_p = mkdir -p --$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mode	adios_internals.h	/^    enum ADIOS_METHOD_MODE mode;$/;"	m	struct:adios_file_struct
name	adios_bp_v1.h	/^    char * name;$/;"	m	struct:adios_attribute_struct_v1
name	adios_bp_v1.h	/^    char * name;$/;"	m	struct:adios_process_group_header_struct_v1
name	adios_bp_v1.h	/^    char * name;$/;"	m	struct:adios_var_header_struct_v1
name	adios_internals.h	/^    char * name;$/;"	m	struct:adios_attribute_struct
name	adios_internals.h	/^    char * name;$/;"	m	struct:adios_file_struct
name	adios_internals.h	/^    char * name;$/;"	m	struct:adios_group_struct
name	adios_internals.h	/^    char * name;$/;"	m	struct:adios_var_struct
nametable	adios_datatap.c	/^}nametable;$/;"	t	file:
nametable_	adios_datatap.c	/^typedef struct nametable_$/;"	s	file:
next	adios_bp_v1.h	/^    struct adios_dimension_struct_v1 * next;$/;"	m	struct:adios_dimension_struct_v1
next	adios_bp_v1.h	/^    struct adios_index_attribute_struct_v1 * next;$/;"	m	struct:adios_index_attribute_struct_v1
next	adios_bp_v1.h	/^    struct adios_index_process_group_struct_v1 * next;$/;"	m	struct:adios_index_process_group_struct_v1
next	adios_bp_v1.h	/^    struct adios_index_var_struct_v1 * next;$/;"	m	struct:adios_index_var_struct_v1
next	adios_bp_v1.h	/^    struct adios_method_info_struct_v1 * next;$/;"	m	struct:adios_method_info_struct_v1
next	adios_internals.h	/^    struct adios_attribute_struct * next;$/;"	m	struct:adios_attribute_struct
next	adios_internals.h	/^    struct adios_dimension_struct * next;$/;"	m	struct:adios_dimension_struct
next	adios_internals.h	/^    struct adios_group_list_struct * next;$/;"	m	struct:adios_group_list_struct
next	adios_internals.h	/^    struct adios_mesh_cell_list_list_struct * next;$/;"	m	struct:adios_mesh_cell_list_list_struct
next	adios_internals.h	/^    struct adios_mesh_item_list_struct * next;$/;"	m	struct:adios_mesh_item_list_struct
next	adios_internals.h	/^    struct adios_mesh_var_list_struct * next;$/;"	m	struct:adios_mesh_var_list_struct
next	adios_internals.h	/^    struct adios_method_list_struct * next;$/;"	m	struct:adios_method_list_struct
next	adios_internals.h	/^    struct adios_var_struct * next;$/;"	m	struct:adios_var_struct
nspace	adios_internals.h	/^    struct adios_mesh_item_struct * nspace;$/;"	m	struct:adios_mesh_structured_struct
offset	adios_bp_v1.h	/^    uint64_t offset;   \/\/ buffer_offset$/;"	m	struct:adios_bp_buffer_struct_v1
offset	adios_bp_v1.h	/^    uint64_t offset;$/;"	m	struct:adios_index_characteristic_struct_v1
offset	adios_internals.h	/^    uint64_t offset;        \/\/ current offset to write at$/;"	m	struct:adios_file_struct
offset_in_file	adios_bp_v1.h	/^    uint64_t offset_in_file;$/;"	m	struct:adios_index_process_group_struct_v1
old_attrs_root	adios_mpi.c	/^    struct adios_index_attribute_struct_v1 * old_attrs_root;$/;"	m	struct:adios_MPI_data_struct	file:
old_attrs_root	adios_mpi_nwu.c	/^    struct adios_index_attribute_struct_v1 * old_attrs_root;$/;"	m	struct:adios_MPI_data_struct	file:
old_attrs_root	adios_posix.c	/^    struct adios_index_attribute_struct_v1 * old_attrs_root;$/;"	m	struct:adios_POSIX_data_struct	file:
old_attrs_root	adios_provenance.c	/^    struct adios_index_attribute_struct_v1 * old_attrs_root;  \/\/ attributes index$/;"	m	struct:adios_PROVENANCE_data_struct	file:
old_pg_root	adios_mpi.c	/^    struct adios_index_process_group_struct_v1 * old_pg_root;$/;"	m	struct:adios_MPI_data_struct	file:
old_pg_root	adios_mpi_nwu.c	/^    struct adios_index_process_group_struct_v1 * old_pg_root;$/;"	m	struct:adios_MPI_data_struct	file:
old_pg_root	adios_posix.c	/^    struct adios_index_process_group_struct_v1 * old_pg_root;$/;"	m	struct:adios_POSIX_data_struct	file:
old_pg_root	adios_provenance.c	/^    struct adios_index_process_group_struct_v1 * old_pg_root; \/\/ process group index$/;"	m	struct:adios_PROVENANCE_data_struct	file:
old_vars_root	adios_mpi.c	/^    struct adios_index_var_struct_v1 * old_vars_root;$/;"	m	struct:adios_MPI_data_struct	file:
old_vars_root	adios_mpi_nwu.c	/^    struct adios_index_var_struct_v1 * old_vars_root;$/;"	m	struct:adios_MPI_data_struct	file:
old_vars_root	adios_posix.c	/^    struct adios_index_var_struct_v1 * old_vars_root;$/;"	m	struct:adios_POSIX_data_struct	file:
old_vars_root	adios_provenance.c	/^    struct adios_index_var_struct_v1 * old_vars_root;         \/\/ vars index$/;"	m	struct:adios_PROVENANCE_data_struct	file:
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
opencount	adios_datatap.c	/^    int opencount;$/;"	m	struct:datatap_method_data	file:
origin	adios_internals.h	/^    struct adios_mesh_item_list_struct * origin;$/;"	m	struct:adios_mesh_uniform_struct
originalname	adios_datatap.c	/^    char *originalname;$/;"	m	struct:nametable_	file:
output_method	adios_provenance.c	/^    enum   ADIOS_PROVENANCE_OUTPUTMETHOD output_method;$/;"	m	struct:adios_PROVENANCE_data_struct	file:
p	Makefile	/^	    p=$(am__strip_dir) \\$/;"	m
p	Makefile	/^	  p=$(am__strip_dir) \\$/;"	m
parameters	adios_bp_v1.h	/^    char * parameters;$/;"	m	struct:adios_method_info_struct_v1
parameters	adios_internals.h	/^    char * parameters;$/;"	m	struct:adios_method_struct
parseBuffer	adios_internals.c	/^static int parseBuffer (mxml_node_t * node)$/;"	f	file:
parseFlag	adios_internals.c	/^static enum ADIOS_FLAG parseFlag (const char * attr_name, const char * flag$/;"	f	file:
parseGroup	adios_internals.c	/^static int parseGroup (mxml_node_t * node)$/;"	f	file:
parseMeshRectilinear	adios_internals.c	/^static int parseMeshRectilinear (mxml_node_t * node$/;"	f	file:
parseMeshRectilinearCoordinatesMultiVar	adios_internals.c	/^static int parseMeshRectilinearCoordinatesMultiVar (const char * coordinates$/;"	f	file:
parseMeshRectilinearCoordinatesSingleVar	adios_internals.c	/^static int parseMeshRectilinearCoordinatesSingleVar (const char * coordinates$/;"	f	file:
parseMeshRectilinearDimensions	adios_internals.c	/^static int parseMeshRectilinearDimensions (const char * dimensions$/;"	f	file:
parseMeshStructured	adios_internals.c	/^static int parseMeshStructured (mxml_node_t * node$/;"	f	file:
parseMeshStructuredDimensions	adios_internals.c	/^static int parseMeshStructuredDimensions (const char * dimensions$/;"	f	file:
parseMeshStructuredNspace	adios_internals.c	/^static int parseMeshStructuredNspace (const char * nspace$/;"	f	file:
parseMeshStructuredPointsMultiVar	adios_internals.c	/^static int parseMeshStructuredPointsMultiVar (const char * points$/;"	f	file:
parseMeshStructuredPointsSingleVar	adios_internals.c	/^static int parseMeshStructuredPointsSingleVar (const char * points$/;"	f	file:
parseMeshUniform	adios_internals.c	/^static int parseMeshUniform (mxml_node_t * node$/;"	f	file:
parseMeshUniformDimensions	adios_internals.c	/^static int parseMeshUniformDimensions (const char * dimensions$/;"	f	file:
parseMeshUniformOrigin	adios_internals.c	/^static int parseMeshUniformOrigin (const char * origin$/;"	f	file:
parseMeshUniformSpacing	adios_internals.c	/^static int parseMeshUniformSpacing (const char * spacing$/;"	f	file:
parseMeshUnstructured	adios_internals.c	/^static int parseMeshUnstructured (mxml_node_t * node$/;"	f	file:
parseMeshUnstructuredMixedCells	adios_internals.c	/^static int parseMeshUnstructuredMixedCells (const char * count$/;"	f	file:
parseMeshUnstructuredPoints	adios_internals.c	/^static int parseMeshUnstructuredPoints (const char * components$/;"	f	file:
parseMeshUnstructuredUniformCells	adios_internals.c	/^static int parseMeshUnstructuredUniformCells (const char * count$/;"	f	file:
parseMethod	adios_internals.c	/^static int parseMethod (mxml_node_t * node)$/;"	f	file:
parseType	adios_internals.c	/^static enum ADIOS_DATATYPES parseType (const char * type, const char * name)$/;"	f	file:
parse_dimension	adios_phdf5.c	/^hsize_t parse_dimension(struct adios_var_struct *pvar_root,$/;"	f
path	adios_bp_v1.h	/^    char * path;$/;"	m	struct:adios_attribute_struct_v1
path	adios_bp_v1.h	/^    char * path;$/;"	m	struct:adios_var_header_struct_v1
path	adios_internals.h	/^    char * path;$/;"	m	struct:adios_attribute_struct
path	adios_internals.h	/^    char * path;$/;"	m	struct:adios_var_struct
payload	adios_bp_v1.h	/^    void * payload;$/;"	m	struct:adios_var_payload_struct_v1
payload_size	adios_bp_v1.h	/^    uint64_t payload_size;$/;"	m	struct:adios_var_header_struct_v1
pfile	adios_datatap.c	/^    char *pfile;$/;"	m	struct:datatap_method_data	file:
pg_index_offset	adios_bp_v1.h	/^    uint64_t pg_index_offset;     \/\/ process groups index starts$/;"	m	struct:adios_bp_buffer_struct_v1
pg_size	adios_bp_v1.h	/^    uint64_t pg_size;             \/\/ process groups index size$/;"	m	struct:adios_bp_buffer_struct_v1
pg_start_in_file	adios_internals.h	/^    uint64_t pg_start_in_file; \/\/  where this pg started in the file$/;"	m	struct:adios_file_struct
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/ADIOS$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/ADIOS$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/ADIOS$/;"	m
points	adios_internals.h	/^    struct adios_mesh_var_list_struct * points;$/;"	m	struct:adios_mesh_structured_struct
points	adios_internals.h	/^    struct adios_var_struct * points;$/;"	m	struct:adios_mesh_unstructured_struct
points_count	adios_internals.h	/^    struct adios_mesh_item_struct * points_count;$/;"	m	struct:adios_mesh_unstructured_struct
points_single_var	adios_internals.h	/^    enum ADIOS_FLAG points_single_var;$/;"	m	struct:adios_mesh_structured_struct
prefix	Makefile	/^prefix = \/ccs\/proj\/e2e\/adios\/bgp$/;"	m
priority	adios_internals.h	/^    int priority;$/;"	m	struct:adios_method_struct
process_id	adios_bp_v1.h	/^    uint32_t process_id;$/;"	m	struct:adios_index_process_group_struct_v1
process_id	adios_internals.h	/^    uint32_t process_id;$/;"	m	struct:adios_group_struct
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
rank	adios_bp_v1.h	/^    uint64_t rank;$/;"	m	struct:adios_dimension_item_struct_v1
rank	adios_datatap.c	/^int rank = -1;$/;"	v
rank	adios_internals.h	/^    double rank;$/;"	m	struct:adios_mesh_item_struct
rank	adios_internals.h	/^    uint64_t rank;$/;"	m	struct:adios_dimension_item_struct
rank	adios_mpi.c	/^    int rank;$/;"	m	struct:adios_MPI_data_struct	file:
rank	adios_mpi_cio.c	/^    int rank;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
rank	adios_mpi_nwu.c	/^    int rank;$/;"	m	struct:adios_MPI_data_struct	file:
rank	adios_phdf5.c	/^  int rank;$/;"	m	struct:adios_phdf5_data_struct	file:
rank	adios_provenance.c	/^    int rank;            \/\/ rank of this process within this group$/;"	m	struct:adios_PROVENANCE_data_struct	file:
read_pg_offset	adios_bp_v1.h	/^    uint64_t read_pg_offset;$/;"	m	struct:adios_bp_buffer_struct_v1
read_pg_size	adios_bp_v1.h	/^    uint64_t read_pg_size;$/;"	m	struct:adios_bp_buffer_struct_v1
realloc_aligned	adios_bp_v1.c	/^static void realloc_aligned (struct adios_bp_buffer_struct_v1 * b$/;"	f	file:
rectilinear	adios_internals.h	/^        struct adios_mesh_rectilinear_struct * rectilinear;$/;"	m	union:adios_mesh_struct::<anonymous>
req	adios_mpi.c	/^    MPI_Request req;$/;"	m	struct:adios_MPI_data_struct	file:
req	adios_mpi_cio.c	/^    MPI_Request req;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
req	adios_mpi_nwu.c	/^    MPI_Request req;$/;"	m	struct:adios_MPI_data_struct	file:
root_id	adios_phdf5.c	/^  hid_t root_id;$/;"	m	struct:adios_phdf5_data_struct	file:
s	adios_datatap.c	/^    IOhandle *s;$/;"	m	struct:fm_structure	file:
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
shared_buffer	adios_internals.h	/^    enum ADIOS_FLAG shared_buffer;$/;"	m	struct:adios_file_struct
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
size	adios_datatap.c	/^    int size; \/\/in bytes - no padding$/;"	m	struct:fm_structure	file:
size	adios_mpi.c	/^    int size;$/;"	m	struct:adios_MPI_data_struct	file:
size	adios_mpi_cio.c	/^    int size;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
size	adios_mpi_nwu.c	/^    int size;$/;"	m	struct:adios_MPI_data_struct	file:
size	adios_phdf5.c	/^  int size;$/;"	m	struct:adios_phdf5_data_struct	file:
size	adios_provenance.c	/^    int size;            \/\/ number of processes in this group$/;"	m	struct:adios_PROVENANCE_data_struct	file:
snd_count	adios_datatap.c	/^    int snd_count;$/;"	m	struct:fm_structure	file:
spacing	adios_internals.h	/^    struct adios_mesh_item_list_struct * spacing;$/;"	m	struct:adios_mesh_uniform_struct
srcdir	Makefile	/^srcdir = .$/;"	m
srcdirstrip	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
start	adios_mpi_cio.c	/^    uint64_t start;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
status	adios_mpi.c	/^    MPI_Status status;$/;"	m	struct:adios_MPI_data_struct	file:
status	adios_mpi_cio.c	/^    MPI_Status status;$/;"	m	struct:adios_MPI_Collective_data_struct	file:
status	adios_mpi_nwu.c	/^    MPI_Status status;$/;"	m	struct:adios_MPI_data_struct	file:
status	adios_provenance.c	/^    MPI_Status status;   \/\/ status for MPI queries here to allocate memory $/;"	m	struct:adios_PROVENANCE_data_struct	file:
striping_unit	adios_mpi_nwu.c	/^    int striping_unit;  \/* file system stripe size *\/$/;"	m	struct:adios_MPI_data_struct	file:
structured	adios_internals.h	/^        struct adios_mesh_structured_struct * structured;$/;"	m	union:adios_mesh_struct::<anonymous>
subdir	Makefile	/^subdir = src$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tags	Makefile	/^	tags=; \\$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
time_index	adios_bp_v1.h	/^    enum ADIOS_FLAG time_index;$/;"	m	struct:adios_dimension_item_struct_v1
time_index	adios_bp_v1.h	/^    uint32_t time_index;$/;"	m	struct:adios_index_process_group_struct_v1
time_index	adios_bp_v1.h	/^    uint32_t time_index;$/;"	m	struct:adios_process_group_header_struct_v1
time_index	adios_internals.h	/^    enum ADIOS_FLAG time_index;$/;"	m	struct:adios_dimension_item_struct
time_index	adios_internals.h	/^    uint32_t time_index;$/;"	m	struct:adios_group_struct
time_index_name	adios_bp_v1.h	/^    char * time_index_name;$/;"	m	struct:adios_index_process_group_struct_v1
time_index_name	adios_bp_v1.h	/^    char * time_index_name;$/;"	m	struct:adios_process_group_header_struct_v1
time_index_name	adios_internals.h	/^    char * time_index_name;$/;"	m	struct:adios_group_struct
time_varying	adios_internals.h	/^    enum ADIOS_FLAG time_varying;$/;"	m	struct:adios_mesh_struct
tokenize_dimensions	adios_internals.c	/^static void tokenize_dimensions (char * str, char *** tokens, int * count)$/;"	f	file:
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
topsrcdirstrip	Makefile	/^	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \\$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
type	adios_bp_v1.h	/^    enum ADIOS_DATATYPES type;$/;"	m	struct:adios_attribute_struct_v1
type	adios_bp_v1.h	/^    enum ADIOS_DATATYPES type;$/;"	m	struct:adios_index_attribute_struct_v1
type	adios_bp_v1.h	/^    enum ADIOS_DATATYPES type;$/;"	m	struct:adios_index_var_struct_v1
type	adios_bp_v1.h	/^    enum ADIOS_DATATYPES type;$/;"	m	struct:adios_var_header_struct_v1
type	adios_internals.h	/^    enum ADIOS_DATATYPES type;$/;"	m	struct:adios_attribute_struct
type	adios_internals.h	/^    enum ADIOS_DATATYPES type;$/;"	m	struct:adios_var_struct
type	adios_internals.h	/^    enum ADIOS_MESH_TYPE type;$/;"	m	struct:adios_mesh_struct
type	adios_internals.h	/^    struct adios_mesh_item_struct type;$/;"	m	struct:adios_mesh_cell_list_struct
uniform	adios_internals.h	/^        struct adios_mesh_uniform_struct * uniform;$/;"	m	union:adios_mesh_struct::<anonymous>
unique	Makefile	/^	  test -n "$$unique" || unique=$$empty_fix; \\$/;"	m
unique	Makefile	/^	unique=`for i in $$list; do \\$/;"	m
unstructured	adios_internals.h	/^        struct adios_mesh_unstructured_struct * unstructured;$/;"	m	union:adios_mesh_struct::<anonymous>
validatePath	adios_internals.c	/^static int validatePath (const struct adios_var_struct * vars$/;"	f	file:
value	adios_bp_v1.h	/^    void * value;$/;"	m	struct:adios_attribute_struct_v1
value	adios_bp_v1.h	/^    void * value;$/;"	m	struct:adios_index_characteristic_struct_v1
value	adios_internals.h	/^    void * value;$/;"	m	struct:adios_attribute_struct
value_to_string	adios_provenance.c	/^static const char * value_to_string (enum ADIOS_DATATYPES type, void * data)$/;"	f	file:
var	adios_internals.h	/^    struct adios_var_struct * var;$/;"	m	struct:adios_attribute_struct
var	adios_internals.h	/^    struct adios_var_struct * var;$/;"	m	struct:adios_mesh_item_struct
var	adios_internals.h	/^    struct adios_var_struct * var;$/;"	m	struct:adios_mesh_var_list_struct
var_count	adios_internals.h	/^    int var_count;$/;"	m	struct:adios_group_struct
var_id	adios_bp_v1.h	/^    uint16_t var_id;$/;"	m	struct:adios_attribute_struct_v1
var_id	adios_bp_v1.h	/^    uint16_t var_id;$/;"	m	struct:adios_dimension_item_struct_v1
var_id	adios_bp_v1.h	/^    uint16_t var_id;$/;"	m	struct:adios_index_characteristic_struct_v1
var_name	adios_bp_v1.h	/^    char * var_name;$/;"	m	struct:adios_index_var_struct_v1
var_path	adios_bp_v1.h	/^    char * var_path;$/;"	m	struct:adios_index_var_struct_v1
vars	adios_internals.h	/^    struct adios_var_struct * vars;$/;"	m	struct:adios_group_struct
vars	adios_internals.h	/^    struct adios_var_struct * vars;$/;"	m	struct:adios_parse_buffer_struct
vars_header_size	adios_mpi.c	/^    uint64_t vars_header_size;$/;"	m	struct:adios_MPI_data_struct	file:
vars_header_size	adios_mpi_nwu.c	/^    uint64_t vars_header_size;$/;"	m	struct:adios_MPI_data_struct	file:
vars_header_size	adios_posix.c	/^    uint64_t vars_header_size;$/;"	m	struct:adios_POSIX_data_struct	file:
vars_index_offset	adios_bp_v1.h	/^    uint64_t vars_index_offset;   \/\/ vars index start$/;"	m	struct:adios_bp_buffer_struct_v1
vars_size	adios_bp_v1.h	/^    uint64_t vars_size;           \/\/ vars index size$/;"	m	struct:adios_bp_buffer_struct_v1
vars_start	adios_internals.h	/^    uint64_t vars_start;    \/\/ offset for where to put the var\/attr count$/;"	m	struct:adios_file_struct
vars_start	adios_mpi.c	/^    uint64_t vars_start;$/;"	m	struct:adios_MPI_data_struct	file:
vars_start	adios_mpi_nwu.c	/^    uint64_t vars_start;$/;"	m	struct:adios_MPI_data_struct	file:
vars_start	adios_posix.c	/^    uint64_t vars_start;$/;"	m	struct:adios_POSIX_data_struct	file:
vars_written	adios_internals.h	/^    uint16_t vars_written;  \/\/ count of vars\/attrs to write$/;"	m	struct:adios_file_struct
version	adios_bp_v1.h	/^    uint32_t version;$/;"	m	struct:adios_bp_buffer_struct_v1
write_buffer	adios_mpi.c	/^    struct adios_MPI_write_buffer write_buffer;$/;"	m	struct:adios_MPI_data_struct	file:
write_offset	adios_internals.h	/^    uint64_t write_offset;  \/\/ offset this var was written at  [for writes]$/;"	m	struct:adios_attribute_struct
write_offset	adios_internals.h	/^    uint64_t write_offset;  \/\/ offset this var was written at  [for writes]$/;"	m	struct:adios_var_struct
write_size_bytes	adios_internals.h	/^    uint64_t write_size_bytes;$/;"	m	struct:adios_file_struct
