SUBROUTINE int_gauslaguer( func, xl, ss, nquad )
!-----------------------------------------------------------------------
!
!    File:         int_gauslaguer
!    Module:       int_gauslaguer
!    Type:         Subprogram
!    Author:       S. W. Bruenn, Dept of Physics, FAU,
!                  Boca Raton, FL 33431-0991
!
!    Date:         8/16/02
!
!    Purpose:
!      Returns as ss the integral of the function func between xl and xu
!       by nquad-point Gauss-Laguerre integration. 
!
!    Subprograms called:
!      none
!
!    Input arguments:
!  func    : integrand
!  xl      : lower limit of integration
!  nquad   : number of inegration points
!
!    Output arguments:
!  ss      : value of the integral
!
!    Modules: 
!  kind_module, numerical_module
!
!-----------------------------------------------------------------------

USE kind_module, ONLY : double
USE numerical_module, ONLY : zero

IMPLICIT NONE
SAVE

!-----------------------------------------------------------------------
!        Input variables.
!-----------------------------------------------------------------------

INTEGER, INTENT(in)              :: nquad         ! number of points of the quadrature

REAL(KIND=double), INTENT(in)    :: xl            ! lower limit of integration
REAL(KIND=double), EXTERNAL      :: func          ! function to be integrated

!-----------------------------------------------------------------------
!        Output variables.
!-----------------------------------------------------------------------

REAL(KIND=double), INTENT(out)   :: ss            ! value of integral

!-----------------------------------------------------------------------
!        Local variables.
!-----------------------------------------------------------------------

LOGICAL                          :: first4  = .true.
LOGICAL                          :: first8  = .true.
LOGICAL                          :: first16 = .true.
LOGICAL                          :: first24 = .true.
LOGICAL                          :: first32 = .true.
LOGICAL                          :: first48 = .true.
LOGICAL                          :: first64 = .true.

INTEGER                          :: i             ! summation index

REAL(KIND=double), EXTERNAL      :: fexp          ! exponential with bounds

REAL(KIND=double)                :: x             ! integration point

REAL(KIND=double), DIMENSION(4)  :: x4            ! quadrature points
REAL(KIND=double), DIMENSION(4)  :: wt4           ! quadrature weights
REAL(KIND=double), DIMENSION(8)  :: x8            ! quadrature points
REAL(KIND=double), DIMENSION(8)  :: wt8           ! quadrature weights
REAL(KIND=double), DIMENSION(16) :: x16           ! quadrature points
REAL(KIND=double), DIMENSION(16) :: wt16          ! quadrature weights
REAL(KIND=double), DIMENSION(24) :: x24           ! quadrature points
REAL(KIND=double), DIMENSION(24) :: wt24          ! quadrature weights
REAL(KIND=double), DIMENSION(24) :: wti24         ! initial quadrature weights
REAL(KIND=double), DIMENSION(32) :: x32           ! quadrature points
REAL(KIND=double), DIMENSION(32) :: wt32          ! quadrature weights
REAL(KIND=double), DIMENSION(48) :: x48           ! quadrature points
REAL(KIND=double), DIMENSION(48) :: wt48          ! quadrature weights
REAL(KIND=double), DIMENSION(48) :: wti48         ! initial quadrature weights
REAL(KIND=double), DIMENSION(64) :: x64           ! quadrature points
REAL(KIND=double), DIMENSION(64) :: wt64          ! quadrature weights

!-----------------------------------------------------------------------
!        Formats
!-----------------------------------------------------------------------

  101 FORMAT (' Can not do nquad =',i5)

!-----------------------------------------------------------------------
!-----------------------------------------------------------------------

nquadv: SELECT CASE (nquad)

   CASE (4)

nquad4: IF ( first4 ) then

        x4(1)    = -0.861136311594053d0
        x4(2)    = -0.339981043584856d0
        x4(3)    =  0.339981043584856d0
        x4(4)    =  0.861136311594053d0

        wt4(1)   =  0.347854845137454d0
        wt4(2)   =  0.652145154862546d0
        wt4(3)   =  0.652145154862546d0
        wt4(4)   =  0.347854845137454d0
        
        first4   = .false.
        
      END IF nquad4
      
      ss         = zero

      DO i = 1,nquad
        x        = x4(i) + xl
        ss       = ss + func( x ) * wt4(i)
      END DO
      
      RETURN

   CASE (8)

nquad8: IF ( first8 ) then

        x8(1)    = -0.960289856497536d0
        x8(2)    = -0.796666477413627d0
        x8(3)    = -0.525532409916329d0
        x8(4)    = -0.183434642495650d0
        x8(8)    =  0.960289856497536d0
        x8(7)    =  0.796666477413627d0
        x8(6)    =  0.525532409916329d0
        x8(5)    =  0.183434642495650d0

        wt8(1)   =  0.101228536290376d0
        wt8(2)   =  0.222381034453374d0
        wt8(3)   =  0.313706645877887d0
        wt8(4)   =  0.362683783378362d0
        wt8(8)   =  0.101228536290376d0
        wt8(7)   =  0.222381034453374d0
        wt8(6)   =  0.313706645877887d0
        wt8(5)   =  0.362683783378362d0
        
        first8   = .false.
        
      END IF nquad8
      
      ss         = zero

      DO i = 1,nquad
        x        = x8(i) + xl
        ss       = ss + func( x ) * wt8(i)
      END DO
      
      RETURN

   CASE (16)

nquad16: IF ( first16 ) then

        x16(1)   = -0.989400934991649d0
        x16(2)   = -0.944575023073232d0
        x16(3)   = -0.865631202387831d0
        x16(4)   = -0.755404408355003d0
        x16(5)   = -0.617876244402643d0
        x16(6)   = -0.458016777657227d0
        x16(7)   = -0.281603550779258d0
        x16(8)   = -0.095012509837637d0
        x16(9)   =  0.095012509837637d0
        x16(10)  =  0.281603550779258d0
        x16(11)  =  0.458016777657227d0
        x16(12)  =  0.617876244402643d0
        x16(13)  =  0.755404408355003d0
        x16(14)  =  0.865631202387831d0
        x16(15)  =  0.944575023073232d0
        x16(16)  =  0.989400934991649d0

        wt16(1)  =  0.027152459411754d0
        wt16(2)  =  0.062253523938647d0
        wt16(3)  =  0.095158511682492d0
        wt16(4)  =  0.124628971255533d0
        wt16(5)  =  0.149595988816576d0
        wt16(6)  =  0.169156519395002d0
        wt16(7)  =  0.182603415044923d0
        wt16(8)  =  0.189450610455068d0
        wt16(9)  =  0.189450610455068d0
        wt16(10) =  0.182603415044923d0
        wt16(11) =  0.169156519395002d0
        wt16(12) =  0.149595988816576d0
        wt16(13) =  0.124628971255533d0
        wt16(14) =  0.095158511682492d0
        wt16(15) =  0.062253523938647d0
        wt16(16) =  0.027152459411754d0
        
        first16  = .false.
        
      END IF nquad16
      
      ss         = zero

      DO i = 1,nquad
        x        = x16(i) + xl
        ss       = ss + func( x ) * wt16(i)
      END DO
      
      RETURN

   CASE (24)

nquad24: IF ( first24 ) then

        x24(1)    =  0.590198521815080d-1
        x24(2)    =  0.311239146198484d+0
        x24(3)    =  0.766096905545937d+0
        x24(4)    =  0.142559759080361d+1
        x24(5)    =  0.229256205863219d+1
        x24(6)    =  0.337077426420900d+1
        x24(7)    =  0.466508370346717d+1
        x24(8)    =  0.618153511873677d+1
        x24(9)    =  0.792753924717215d+1
        x24(10)   =  0.991209801507771d+1
        x24(11)   =  0.121461027117298d+2
        x24(12)   =  0.146427322895967d+2

        x24(13)   =  0.174179926465090d+2
        x24(14)   =  0.204914600826164d+2
        x24(15)   =  0.238873298481697d+2
        x24(16)   =  0.276359371743327d+2
        x24(17)   =  0.317760413523747d+2
        x24(18)   =  0.363584058016516d+2
        x24(19)   =  0.414517204848708d+2
        x24(20)   =  0.471531064451563d+2
        x24(21)   =  0.536085745446951d+2
        x24(22)   =  0.610585314472188d+2
        x24(23)   =  0.699622400351050d+2
        x24(24)   =  0.814982792339489d+2

        wti24(1)  =  0.142811973334782d+0
        wti24(2)  =  0.258774107517424d+0
        wti24(3)  =  0.258806707272870d+0
        wti24(4)  =  0.183322688977778d+0
        wti24(5)  =  0.981662726299189d-1
        wti24(6)  =  0.407324781514086d-1
        wti24(7)  =  0.132260194051202d-1
        wti24(8)  =  0.336934905847830d-2
        wti24(9)  =  0.672162564093548d-3
        wti24(10) =  0.104461214659275d-3
        wti24(11) =  0.125447219779933d-4
        wti24(12) =  0.115131581273728d-5

        wti24(13) =  0.796081295913363d-7
        wti24(14) =  0.407285898755000d-8
        wti24(15) =  0.150700822629258d-9
        wti24(16) =  0.391773651505845d-11
        wti24(17) =  0.689418105295809d-13
        wti24(18) =  0.781980038245945d-15
        wti24(19) =  0.535018881301004d-17
        wti24(20) =  0.201051746455550d-19
        wti24(21) =  0.360576586455296d-22
        wti24(22) =  0.245181884587840d-25
        wti24(23) =  0.408830159368066d-29
        wti24(24) =  0.557534578832836d-34
        
        DO i = 1,nquad
          wt24(i) = fexp(x24(i)) * wti24(i)
        END DO
     
        first24  = .false.
        
      END IF nquad24
      
      ss         = zero

      DO i = 1,nquad
        x        = x24(i) + xl
        ss       = ss + func( x ) * wt24(i)
      END DO
      
      RETURN

   CASE (32)

nquad32 :IF ( first32 ) then

        x32(16)  = -0.048307665687738d0
        x32(15)  = -0.144471961582796d0
        x32(14)  = -0.239287362252137d0
        x32(13)  = -0.331868602282127d0
        x32(12)  = -0.421351276130635d0
        x32(11)  = -0.506899908932229d0
        x32(10)  = -0.587715757240762d0
        x32(9)   = -0.663044266930215d0
        x32(8)   = -0.732182118740289d0
        x32(7)   = -0.794483795967942d0
        x32(6)   = -0.849367613732569d0
        x32(5)   = -0.896321155766052d0
        x32(4)   = -0.934906075937739d0
        x32(3)   = -0.964762255587506d0
        x32(2)   = -0.985611511545268d0
        x32(1)   = -0.997263861849481d0

        x32(17)  =  0.048307665687738d0
        x32(18)  =  0.144471961582796d0
        x32(19)  =  0.239287362252137d0
        x32(20)  =  0.331868602282127d0
        x32(21)  =  0.421351276130635d0
        x32(22)  =  0.506899908932229d0
        x32(23)  =  0.587715757240762d0
        x32(24)  =  0.663044266930215d0
        x32(25)  =  0.732182118740289d0
        x32(26)  =  0.794483795967942d0
        x32(27)  =  0.849367613732569d0
        x32(28)  =  0.896321155766052d0
        x32(29)  =  0.934906075937739d0
        x32(30)  =  0.964762255587506d0
        x32(31)  =  0.985611511545268d0
        x32(32)  =  0.997263861849481d0

        wt32(16) =  0.096540088514727d0
        wt32(15) =  0.095638720079274d0
        wt32(14) =  0.093844399080804d0
        wt32(13) =  0.091173878695763d0
        wt32(12) =  0.087652093004403d0
        wt32(11) =  0.083311924226946d0
        wt32(10) =  0.078193895787070d0
        wt32(9)  =  0.072345794108848d0
        wt32(8)  =  0.065822222776361d0
        wt32(7)  =  0.058684093478535d0
        wt32(6)  =  0.050998059262376d0
        wt32(5)  =  0.042835898022226d0
        wt32(4)  =  0.034273862913021d0
        wt32(3)  =  0.025392065309262d0
        wt32(2)  =  0.016274394730905d0
        wt32(1)  =  0.007018610009470d0

        wt32(17) =  0.096540088514727d0
        wt32(18) =  0.095638720079274d0
        wt32(19) =  0.093844399080804d0
        wt32(20) =  0.091173878695763d0
        wt32(21) =  0.087652093004403d0
        wt32(22) =  0.083311924226946d0
        wt32(23) =  0.078193895787070d0
        wt32(24) =  0.072345794108848d0
        wt32(25) =  0.065822222776361d0
        wt32(26) =  0.058684093478535d0
        wt32(27) =  0.050998059262376d0
        wt32(28) =  0.042835898022226d0
        wt32(29) =  0.034273862913021d0
        wt32(30) =  0.025392065309262d0
        wt32(31) =  0.016274394730905d0
        wt32(32) =  0.007018610009470d0
        
        first32  = .false.
        
      END IF nquad32
      
      ss         = zero

      DO i = 1,nquad
        x        = x32(i) + xl
        ss       = ss + func( x ) * wt32(i)
      END DO
      
      RETURN

   CASE (48)

nquad48: IF ( first48 ) then

        x48(1)    =  2.98112358300d-2
        x48(2)    =  1.57107990618d-1
        x48(3)    =  3.86265037576d-1
        x48(4)    =  7.17574694116d-1
        x48(5)    =  1.15139383403d00
        x48(6)    =  1.68818582342d00
        x48(7)    =  2.32852700665d00
        x48(8)    =  3.07311086165d00
        x48(9)    =  3.92275241305d00
        x48(10)   =  4.87839335592d00
        x48(11)   =  5.94110805462d00
        x48(12)   =  7.11211053589d00
        x48(13)   =  8.39276259909d00
        x48(14)   =  9.78458318469d00
        x48(15)   =  1.12892591680d01
        x48(16)   =  1.29086577783d01

        x48(17)   =  1.46448408832d01
        x48(18)   =  1.65000814290d01
        x48(19)   =  1.84768823869d01
        x48(20)   =  2.05779986340d01
        x48(21)   =  2.28064622905d01
        x48(22)   =  2.51656121564d01
        x48(23)   =  2.76591280445d01
        x48(24)   =  3.02910710010d01
        x48(25)   =  3.30659306625d01
        x48(26)   =  3.59886813275d01
        x48(27)   =  3.90648487642d01
        x48(28)   =  4.23005903629d01
        x48(29)   =  4.57027920385d01
        x48(30)   =  4.92791863828d01
        x48(31)   =  5.30384980878d01
        x48(32)   =  5.69906248148d01

        x48(33)   =  6.11468647861d01
        x48(34)   =  6.55202069290d01
        x48(35)   =  7.01257062361d01
        x48(36)   =  7.49809775189d01
        x48(37)   =  8.01068573503d01
        x48(38)   =  8.55283111160d01
        x48(39)   =  9.12757079937d01
        x48(40)   =  9.73866677136d01
        x48(41)   =  1.03908833357d02
        x48(42)   =  1.10904220885d02
        x48(43)   =  1.18456425046d02
        x48(44)   =  1.26683425769d02
        x48(45)   =  1.35762589578d02
        x48(46)   =  1.45986432709d02
        x48(47)   =  1.57915612023d02
        x48(48)   =  1.72996328149d02

        wti48(1)  =  7.42620058280d-02
        wti48(2)  =  1.52271949809d-01
        wti48(3)  =  1.90409088263d-01
        wti48(4)  =  1.86633059485d-01
        wti48(5)  =  1.53424200158d-01
        wti48(6)  =  1.08779692807d-01
        wti48(7)  =  6.74607386092d-02
        wti48(8)  =  3.68811941158d-02
        wti48(9)  =  1.78568442692d-02
        wti48(10) =  7.67761651450d-03
        wti48(11) =  2.93578590374d-03
        wti48(12) =  9.99065537816d-04
        wti48(13) =  3.20598016992d-04
        wti48(14) =  8.15387118036d-05
        wti48(15) =  1.95315871573d-05
        wti48(16) =  4.15418294505d-06

        wti48(17) =  7.83370038027d-07
        wti48(18) =  1.30739477492d-07
        wti48(19) =  1.92707140802d-08
        wti48(20) =  2.50263893713d-09
        wti48(21) =  2.85578550877d-10
        wti48(22) =  2.85462241206d-11
        wti48(23) =  2.49101068494d-12
        wti48(24) =  1.89033660697d-13
        wti48(25) =  1.24216268595d-14
        wti48(26) =  7.03423152021d-16
        wti48(27) =  3.41454914859d-17
        wti48(28) =  1.41231541490d-18
        wti48(29) =  4.94421800810d-20
        wti48(30) =  1.45395248137d-21
        wti48(31) =  3.56106836500d-23
        wti48(32) =  7.19405599649d-25

        wti48(33) =  1.18553722835d-26
        wti48(34) =  1.57349135708d-28
        wti48(35) =  1.65728544092d-30
        wti48(36) =  1.36143416272d-32
        wti48(37) =  8.54615581396d-35
        wti48(38) =  4.00009053248d-37
        wti48(39) =  1.35501999110d-39
        wti48(40) =  3.20163679535d-42
        wti48(41) =  5.03586916606d-45
        wti48(42) =  4.96248754070d-48
        wti48(43) =  2.82351071612d-51
        wti48(44) =  8.26844606951d-55
        wti48(45) =  1.04906484782d-58
        wti48(46) =  4.34657442273d-63
        wti48(47) =  3.43473643840d-68
        wti48(48) =  1.31906608840d-74
        
        DO i = 1,nquad
          wt48(i) = fexp(x48(i)) * wti48(i)
        END DO
     
        first48  = .false.
        
      END IF nquad48
      
      ss         = zero

      DO i = 1,nquad
        x        = x48(i) + xl
        ss       = ss + func( x ) * wt48(i)
      END DO
      
      RETURN

   CASE (64)

nquad64: IF ( first64 ) then

        x64(64)   =  .999305041735772d0
        x64(63)   =  .996340116771955d0
        x64(62)   =  .991013371476744d0
        x64(61)   =  .983336253884626d0
        x64(60)   =  .973326827789911d0
        x64(59)   =  .961008799652054d0
        x64(58)   =  .946411374858403d0
        x64(57)   =  .929569172131940d0
        x64(56)   =  .910522137078503d0
        x64(55)   =  .889315445995114d0
        x64(54)   =  .865999398154093d0
        x64(53)   =  .840629296252580d0
        x64(52)   =  .813265315122798d0
        x64(51)   =  .783972358943341d0
        x64(50)   =  .752819907260532d0
        x64(49)   =  .719881850171611d0

        x64(48)   =  .685236313054233d0
        x64(47)   =  .648965471254657d0
        x64(46)   =  .611155355172393d0
        x64(45)   =  .571895646202634d0
        x64(44)   =  .531279464019895d0
        x64(43)   =  .489403145707053d0
        x64(42)   =  .446366017253464d0
        x64(41)   =  .402270157963992d0
        x64(40)   =  .357220158337668d0
        x64(39)   =  .311322871990211d0
        x64(38)   =  .264687162208767d0
        x64(37)   =  .217423643740007d0
        x64(36)   =  .169644420423993d0
        x64(35)   =  .121462819296121d0
        x64(34)   =  .072993121787799d0
        x64(33)   =  .024350292663424d0

        x64(32)   = -.024350292663424d0
        x64(31)   = -.072993121787799d0
        x64(30)   = -.121462819296121d0
        x64(29)   = -.169644420423993d0
        x64(28)   = -.217423643740007d0
        x64(27)   = -.264687162208767d0
        x64(26)   = -.311322871990211d0
        x64(25)   = -.357220158337668d0
        x64(24)   = -.402270157963992d0
        x64(23)   = -.446366017253464d0
        x64(22)   = -.489403145707053d0
        x64(21)   = -.531279464019895d0
        x64(20)   = -.571895646202634d0
        x64(19)   = -.611155355172393d0
        x64(18)   = -.648965471254657d0
        x64(17)   = -.685236313054233d0

        x64(16)   = -.719881850171611d0
        x64(15)   = -.752819907260532d0
        x64(14)   = -.783972358943341d0
        x64(13)   = -.813265315122798d0
        x64(12)   = -.840629296252580d0
        x64(11)   = -.865999398154093d0
        x64(10)   = -.889315445995114d0
        x64(9)    = -.910522137078503d0
        x64(8)    = -.929569172131940d0
        x64(7)    = -.946411374858403d0
        x64(6)    = -.961008799652054d0
        x64(5)    = -.973326827789911d0
        x64(4)    = -.983336253884626d0
        x64(3)    = -.991013371476744d0
        x64(2)    = -.996340116771955d0
        x64(1)    = -.999305041735772d0

        wt64(64)  =  .001783280721696d0
        wt64(63)  =  .004147033260562d0
        wt64(62)  =  .006504457968978d0
        wt64(61)  =  .008846759826364d0
        wt64(60)  =  .011168139460131d0
        wt64(59)  =  .013463047896719d0
        wt64(58)  =  .015726030476025d0
        wt64(57)  =  .017951715775697d0
        wt64(56)  =  .020134823153530d0
        wt64(55)  =  .022270173808383d0
        wt64(54)  =  .024352702568711d0
        wt64(53)  =  .026377469715055d0
        wt64(52)  =  .028339672614259d0
        wt64(51)  =  .030234657072402d0
        wt64(50)  =  .032057928354852d0
        wt64(49)  =  .033805161837142d0

        wt64(48)  =  .035472213256882d0
        wt64(47)  =  .037055128540240d0
        wt64(46)  =  .038550153178616d0
        wt64(45)  =  .039953741132720d0
        wt64(44)  =  .041262563242624d0
        wt64(43)  =  .042473515123654d0
        wt64(42)  =  .043583724529323d0
        wt64(41)  =  .044590558163757d0
        wt64(40)  =  .045491627927418d0
        wt64(39)  =  .046284796581314d0
        wt64(38)  =  .046968182816210d0
        wt64(37)  =  .047540165714830d0
        wt64(36)  =  .047999388596458d0
        wt64(35)  =  .048344762234803d0
        wt64(34)  =  .048575467441503d0
        wt64(33)  =  .048690957009140d0

        wt64(32)  =  .048690957009140d0
        wt64(31)  =  .048575467441503d0
        wt64(30)  =  .048344762234803d0
        wt64(29)  =  .047999388596458d0
        wt64(28)  =  .047540165714830d0
        wt64(27)  =  .046968182816210d0
        wt64(26)  =  .046284796581314d0
        wt64(25)  =  .045491627927418d0
        wt64(24)  =  .044590558163757d0
        wt64(23)  =  .043583724529323d0
        wt64(22)  =  .042473515123654d0
        wt64(21)  =  .041262563242624d0
        wt64(20)  =  .039953741132720d0
        wt64(19)  =  .038550153178616d0
        wt64(18)  =  .037055128540240d0
        wt64(17)  =  .035472213256882d0

        wt64(16)  =  .033805161837142d0
        wt64(15)  =  .032057928354852d0
        wt64(14)  =  .030234657072402d0
        wt64(13)  =  .028339672614259d0
        wt64(12)  =  .026377469715055d0
        wt64(11)  =  .024352702568711d0
        wt64(10)  =  .022270173808383d0
        wt64(9)   =  .020134823153530d0
        wt64(8)   =  .017951715775697d0
        wt64(7)   =  .015726030476025d0
        wt64(6)   =  .013463047896719d0
        wt64(5)   =  .011168139460131d0
        wt64(4)   =  .008846759826364d0
        wt64(3)   =  .006504457968978d0
        wt64(2)   =  .004147033260562d0
        wt64(1)   =  .001783280721696d0
        
        first64  = .false.
        
END IF nquad64
      
ss               = zero

DO i = 1,nquad
  x              = x64(i) + xl
  ss             = ss + func( x ) * wt64(i)
END DO
      
RETURN

END SELECT nquadv

WRITE (6,101) nquad
STOP
      
END SUBROUTINE int_gauslaguer
