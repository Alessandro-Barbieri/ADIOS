Flexpath Testing
================

Possible Test Setups
--------------------

1. Program which directly calls adios_flexpath functions and checks returns.
2. Program which forks readers and writers, which dump to file and checks file contents.

Existing Directories
--------------------

* global_range_select - runs tests using the global range selectors. Current tests are listed below:
	- 1 to 1 all to all

* scalar - read/write a scalar with (XML API)

* 1D_arr_global - read/write a 1D array of doubles (XML API)

* 1D_arr_global_noxml - read/write a 1D array of doubles but no XML API (analogous
  to 1D_arr_global)
  
* maya_noxml - inspired by maya; same variables written multiple times (doesn't work with Flexpath)

* maya_append - inspired by maya; testing the append mode (doesn't work with Flexpath)
  
How to build and clean the build 
--------------------------------
# you need to set the environment variables as Makefile uses those locations 
# to locate libraries and headers

export ADIOS_ROOT=/rock/opt/adios/git-dbg
export MXML_ROOT=/rock/opt/mxml/2.7
export MPI_ROOT=/rock/opt/openmpi/1.6.3
export EVPATH_ROOT=/rock/opt/evpath

# in certain cases you might need the lustre directory (e.g., on flexpath on kraken)
# depending how do you compiled your adios
export LUSTRE_ROOT=/opt/cray/lustre-cray_ss_s/default

To build most of tests run:

# to use MPI method
make -f Makefile.master 

# to use FLEXPATH method
make -f Makefile.master CFLAGS="-DFLEXPATH_METHOD"

# to clean the build
make -f Makefile.master clean

There are a few Makefiles for particular machines such as Makefile.kraken.
If you are building on such a machine you might take a look at the file
and try to run it instead of Makefile.master.

How to run regression tests
----------------------------
# be sure that appropriate paths for openmpi, mxml, and evpath are
# set appropriately
 
module list
Currently Loaded Modules:
  1) openmpi/1.6.3    2) mxml/2.7    3) evpath


# to clean the data generated during the test
make -f Makefile.master clean_test

# to run test
# in one terminal run writers
make -f Makefile.master run-w
# in the second terminal run readers
make -f Makefile.master run-r

Otherwise see Makefile.master for additional options.

Notes
------
If you want to copy the individual regression test, then
copy the include directory and the test directory as well.

E.g. if you want to copy the scalar test to your home dir
mkdir ~/my_reg_test
cp -R include ~/my_reg_test
cp -R scalar ~/my_reg_test
cd ~/my_reg_test
And proceed with the build

Recent tests
------------

MPI transport (2013-08-28) - my laptop

TEST_PASSED reader.c:main:124: scalar: rank 0
TEST_PASSED reader.c:main:124: scalar: rank 1
TEST_PASSED reader.c:main:160: 1D_arr_global: rank 0
TEST_PASSED reader.c:main:160: 1D_arr_global: rank 1
TEST_PASSED reader.c:main:166: 1D_arr_global_noxml: rank 0
TEST_PASSED reader.c:main:166: 1D_arr_global_noxml: rank 1
TEST_PASSED reader.c:main:205: maya_append: rank 0
TEST_PASSED reader.c:main:474: maya_noxml: rank 0

FLEXPATH transport (2013-08-28) - my laptop

TEST_PASSED reader.c:main:124: scalar: rank 0
TEST_PASSED reader.c:main:124: scalar: rank 1
TEST_PASSED reader.c:main:160: 1D_arr_global: rank 0
TEST_PASSED reader.c:main:160: 1D_arr_global: rank 1
TEST_PASSED reader.c:main:166: 1D_arr_global_noxml: rank 0
TEST_PASSED reader.c:main:166: 1D_arr_global_noxml: rank 1

maya_append and maya_noxml tests failed
