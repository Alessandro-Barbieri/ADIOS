#!/bin/bash

if [ `hostname | cut -c 1-4` == "ewok" ]; then

    ########
    # Ewok #
    ########
    echo "Configure on EWOK"
    source /etc/profile.d/modules.sh
    module unload hdf5
    module unload netcdf
    module unload PE-gnu
    module unload PE-pgi
    module unload PE-pathscale
    module unload pgi
    TARGET=pgi
    module load PE-$TARGET
    module load hdf5/1.8.2_par
    #module load hdf5/1.6.7-ompi1.2.8
    module load netcdf/3.6.2
    export MPICC=mpicc
    export MPICXX=mpiCC
    export MPIFC=mpif90
    if [ "$TARGET" == "pgi" ]; then
        export CC=pgcc
        export CXX=pgCC
        export FC=pgf90
    elif [ "$TARGET" == "gnu" ]; then
        export CC=gcc
        export CXX=g++
        export FC=gfortran
    else
        echo "TARGET must be pgi or gnu"
        exit 1
    fi

    export CFLAGS="-g -fPIC"
    #./configure --prefix=/sw/ewok/adios/1.1.0/sl5.2_${TARGET}_binary \
    ./configure --prefix=/ccs/proj/e2e/pnorbert/ADIOS/ewok.$TARGET \
        --enable-dependency-tracking \
        --with-mxml=/ccs/proj/e2e/pnorbert/mxml \
        --enable-research-transports  \
        --without-datatap
#        --without-phdf5
#        --without-netcdf
        #--with-datatap=/ccs/home/habbasi/work/ewok/
        #--enable-datatap=ib
        #--with-dmalloc=/ccs/proj/e2e/pnorbert/dmalloc.$TARGET


elif [ `hostname | cut -c 1-6` == "jaguar" -o `hostname | cut -c 1-7` == "chester" ]; then

    BUILD_STAGING=false
    if [ $BUILD_STAGING == "false" ]; then

        ##########
        # Jaguar #
        ##########
        echo "Configure on JAGUAR"
        export CC=cc
        #export CFLAGS="-Wall -g"
        export FC=ftn
        export CXX=CC
        source /opt/modules/default/etc/modules.sh
        module unload szip
        module unload hdf5
        module unload netcdf
        module unload netcdf-hdf5parallel
        module unload hdf5-parallel
        module unload PrgEnv-gnu
        module unload PrgEnv-pgi
        module unload PrgEnv-intel
        module unload PrgEnv-cray
        module unload xt-papi
        TARGET=gnu
        module load PrgEnv-$TARGET
        module load netcdf-hdf5parallel
        module load hdf5-parallel
        module load szip
        module load xt-papi
        # use the two lines below for openmpi
        #export CC=mpicc
        #export FC=mpif90
        #CFLAGS="-fPIC" ./configure --prefix=/sw/xt5/adios/1.1.0/cnl2.2_${TARGET}_binary \
        #CFLAGS="-fPIC" ./configure --prefix=/ccs/proj/e2e/pnorbert/ADIOS/jaguar.$TARGET \
        #CFLAGS="-g -O0 -fPIC -DDART_DO_VERSIONING" ./configure --prefix=/ccs/proj/fus022/ADIOS/jaguar.$TARGET \
        #CFLAGS="-g -O0 -fPIC -DDART_DO_VERSIONING" ./configure --prefix=/ccs/proj/e2e/pnorbert/ADIOS/jaguar.noxml \
        CFLAGS="-fPIC" ./configure --prefix=/sw/xt5/adios/1.2_rc1/cnl2.2_gnu4.4.3 \
            --enable-dependency-tracking \
            --with-mxml=/ccs/proj/e2e/pnorbert/mxml.xt5.$TARGET \
            --without-portals \
            --enable-research-transports \
            --without-datatap \
            --with-netcdf=/opt/cray/netcdf/3.6.2/netcdf-${TARGET} \
            --with-hdf5=/sw/xt5/hdf5/1.8.2/cnl2.1_gnu4.2.0 \
            --without-phdf5 \
            --without-nc4par

            #--with-hdf5=/sw/xt5/hdf5/1.8.1/cnl2.1_pgi7.2.3 \
            #--with-phdf5=${CRAY_HDF5_DIR}/hdf5-parallel-${TARGET} \
            #--with-nc4par=${CRAY_NETCDF_DIR}/netcdf-hdf5parallel-${TARGET} \
            #--with-dart=/ccs/proj/e2e/pnorbert/dart/current
            #--with-dmalloc=/ccs/proj/e2e/pnorbert/dmalloc.xt5_$TARGET \
            #--with-hdf5=/sw/xt/hdf5/1.6.7/cnl2.0_pgi7.1.6_par \
            #--with-netcdf=/sw/xt/netcdf/3.6.2/sles9.2_pgi7.0.7
            #--with-hdf5-libdir="/sw/xt/hdf5/1.6.7/cnl2.0_pgi7.1.6_par/lib -L/sw/xt/szip/2.1/sles9.2_pgi7.0.7/lib -lsz -lz"

    else

        ##########
        # Jaguar #
        ##########
        echo "Configure on JAGUAR"
        export CC=cc
        #export CFLAGS="-Wall -g"
        export FC=ftn
        export CXX=CC
        source /opt/modules/default/etc/modules.sh
        module unload szip
        module unload hdf5
        module unload netcdf
        module unload hdf5-parallel
        module unload netcdf-hdf5parallel
        module unload PrgEnv-gnu
        module unload PrgEnv-pgi
        module unload PrgEnv-intel
        module unload PrgEnv-cray
        module unload xt-papi
        #module unload xtpe-quadcore
        TARGET=pgi
        module load PrgEnv-$TARGET
        module load szip
        module load xt-papi
        # use the two lines below for openmpi
        #export CC=mpicc
        #export FC=mpif90
        LDFLAGS="-pgcpplibs -L/opt/cray/netcdf-hdf5parallel/4.0.1.3/netcdf-hdf5parallel-$TARGET/lib -L/opt/cray/hdf5-parallel/1.8.4.1/hdf5-parallel-$TARGET/lib" \
        CPPFLAGS="-DMPICH_IGNORE_CXX_SEEK -I/opt/cray/netcdf-hdf5parallel/4.0.1.3/netcdf-hdf5parallel-$TARGET/include -I/opt/cray/hdf5-parallel/1.8.4.1/hdf5-parallel-$TARGET/include" \
        CFLAGS="-fPIC -g -O0" \
        ./configure --prefix=/ccs/home/ge1/work/jaguar \
        --enable-dependency-tracking \
        --with-mxml=/ccs/proj/e2e/pnorbert/mxml.xt5.$TARGET \
        --with-nssi=/ccs/home/thkorde/projects/nessie/install/cnl \
        --with-portals \
        --without-datatap

    fi

elif [ `hostname | cut -c 1-4` == "euge" ]; then
    ###################
    # Eugene BlueGene #
    ###################
    echo "Configure on Eugene (BlueGene)"
    export MPICC=mpixlc_r
    export MPIFC=mpixlf90
    export CFLAGS="-g -O0"
    #export FCFLAGS="-qextname"
    export FC=xlf90
    export CC=xlc_r

    source /etc/profile.d/modules.sh
    module load netcdf/3.6.2-linux
    module load hdf5/1.8.1-linux

    ./configure --prefix=/ccs/proj/e2e/pnorbert/ADIOS/eugene \
            --enable-dependency-tracking \
            --with-mxml=/ccs/proj/e2e/adios/bgp
        #--with-hdf5=/sw/bgp/hdf5/1.8.0/sles10.1_xlc9.0xlf11.1 \
        #--with-hdf5-libdir="/sw/bgp/hdf5/1.8.0/sles10.1_xlc9.0xlf11.1/lib -lhdf5 -L/sw/bgp/szip/2.1/sles10.1_xlc9.0/lib -lsz /usr/lib/libz.a" \
        #--with-netcdf=/sw/bgp/netcdf/3.6.2/sles10.1_xlc9.0xlf11.1

elif [ `hostname | cut -c 1-4` == "lens" ]; then

    ########
    # Lens #
    ########
    echo "Configure on LENS"
    export CC=mpicc
    export CXX=mpiCC
    source /etc/profile.d/modules.sh
    module load hdf5
    #module load netcdf
    CFLAGS="-fPIC" ./configure --prefix=/ccs/proj/e2e/pnorbert/adios/lens \
        --enable-dependency-tracking \
        --with-mxml=/ccs/proj/e2e/pnorbert/mxml \
        --without-netcdf
        #--with-hdf5=/sw/analysis-x64/hdf5/1.6.7/sl5.0_pgi7.1.5_ompi1.2.6 \
        #--with-netcdf=/sw/analysis-x64/netcdf/3.6.2/sl5.0_pgi7.1.5


elif [ `hostname | cut -c 1-4` == "nid0" ]; then
    ############
    # Franklin #
    ############
    echo "Configure on FRANKLIN"
    export CC=cc
    export FC=ftn
    module unload hdf5
    module unload netcdf
    module load netcdf/3.6.2
    module load hdf5_par/1.6.5
    CFLAGS="-fPIC" ./configure --prefix=/project/projectdirs/m499/adios \
        --enable-dependency-tracking \
        --with-mxml=$HOME/mxml
        #--with-phdf5=/usr/common/usg/hdf5/1.6.5/parallel/lib \
        #--with-phdf5-libdir="/usr/common/usg/hdf5/1.6.5/parallel/lib -lhdf5_fortran -lhdf5_hl -lhdf5 -L/usr/common/usg/zlib/default/lib -lz -L/usr/common/usg/szip/default/lib -lsz -I/usr/common/usg/hdf5/1.6.5/parallel/include -I/usr/common/usg/zlib/default/include -I/usr/common/usg/szip/default/include" \
        #--with-netcdf=/usr/common/usg/netcdf/3.6.2


elif [ `hostname | cut -c 1-4` == "dyn9" -o `hostname | cut -c 1-10` == "podhorszki" ]; then

    #######
    # Mac #
    #######
    #
    # NOTE: disable-write is required to build on Mac
    #
    echo "Configure on Mac"
    export CC=mpicc
    export FC=mpif90
    CFLAGS="-DO_LARGEFILE=0 -fno-common" ./configure --prefix=/opt/adios \
        --with-mxml=/opt/mxml \
        --with-netcdf=/opt/netcdf \
        --with-hdf5=/opt/hdf5 \
        --without-netcdf
        #--disable-write
        #--enable-dependency-tracking --enable-shared --disable-static

elif [ `hostname | cut -c 1-7` == "ubuntu" ]; then

    #########################
    # Scott's ubuntu laptop #
    #########################
    echo "Configure on UBUNTU"
    export CC=mpicc
    ./configure --prefix=/usr/local/adios \
        --enable-dependency-tracking \
        --with-mxml=/usr/local/adios
        #--with-hdf5=/usr/local/hdf5-serial\
        #--with-phdf5=/usr/local \
        #--with-netcdf=/usr

elif [ `hostname | cut -c 1-6` == "tomato" ]; then

    #########################
    # Todd's ubuntu laptop #
    #########################
    echo "Configure on UBUNTU"
    export CC=mpicc
    ./configure --prefix=/home/thkorde/local \
        --enable-dependency-tracking \
        --with-mxml=/home/thkorde/local \
        --with-phdf5=/home/thkorde/local \
        --with-hdf5=/home/thkorde/local \
        --with-netcdf=/home/thkorde/local

else
    echo "Could not determine what machine is this"
    echo "This script is just for configuring adios on the authors' machines"
    echo "You can study it to figure out how to configure adios on your system"
fi



